{"mappings":"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","sources":["<anon>","source/TypeScript/editor_base.ts","source/TypeScript/logging.ts","source/TypeScript/regexes.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirea313\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirea313\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2h5uG\", function(module, exports) {\n\n$parcel$export(module.exports, \"BaseEditorClass\", () => $f0a5947e9a01104b$export$5a86527663cb513c);\n\nvar $6F8RI = parcelRequire(\"6F8RI\");\n\nvar $hYoLG = parcelRequire(\"hYoLG\");\nclass $f0a5947e9a01104b$export$5a86527663cb513c {\n    init() {\n        console.log(`Parcel Editor Version ${(0, $6F8RI.editor_version)} - Starting up.\\nLoading ${this.editorType} editor - Version ${this.editorVersion}`);\n        this.checkStorage();\n        this.logStorageCount();\n        this.logStorage();\n    }\n    update() {\n        this.checkStorage();\n    }\n    checkStorage() {\n        this.parcels = [];\n        for(let i = 0; i < localStorage.length; i++){\n            if (!(0, $hYoLG.regex_id_full).test(localStorage.key(i))) continue;\n            this.parcels.push(localStorage.key(i));\n        }\n        this.sortStorage();\n    }\n    sortStorage() {\n        this.parcels.sort((a, b)=>a.localeCompare(b));\n        // Assign all \"resource:\" to this.resources\n        this.resources = this.parcels.filter((id)=>id.startsWith(\"resource:\"));\n        // Assign all \"structure:\" to this.structures\n        this.structures = this.parcels.filter((id)=>id.startsWith(\"structure:\"));\n        // Assign all \"research:\" to this.research\n        this.research = this.parcels.filter((id)=>id.startsWith(\"research:\"));\n        // Assign all \"unique:\" to this.unique\n        this.unique = this.parcels.filter((id)=>id.startsWith(\"unique:\"));\n        // Assign all \"interaction:\" to this.interactions\n        this.interactions = this.parcels.filter((id)=>id.startsWith(\"interaction:\"));\n        // Assign all \"event:\" to this.events\n        this.events = this.parcels.filter((id)=>id.startsWith(\"event:\"));\n    }\n    logStorage() {\n        console.table({\n            Resources: this.resources,\n            Structures: this.structures,\n            Research: this.research,\n            Unique: this.unique,\n            Interactions: this.interactions,\n            Events: this.events\n        });\n    }\n    logStorageCount() {\n        console.table({\n            Total: [\n                this.parcels.length\n            ],\n            Resources: [\n                this.resources.length\n            ],\n            Structures: [\n                this.structures.length\n            ],\n            Research: [\n                this.research.length\n            ],\n            Unique: [\n                this.unique.length\n            ],\n            Interactions: [\n                this.interactions.length\n            ],\n            Events: [\n                this.events.length\n            ]\n        });\n    }\n    save() {\n        if (!this.checkValidToSave()) {\n            console.warn(\"Parcel is not valid and cannot be saved\");\n            this.isError = true;\n            this.updateSaveStatus();\n            // Fail\n            return false;\n        }\n        // Get the full id\n        const fullId = `${this.editorType}:${this.current.id}`;\n        // Clear delayed saving\n        if (this.saveTimeout) clearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n        // Save it\n        localStorage.setItem(fullId, JSON.stringify(this.current));\n        // Update saved state and saved status\n        this.isSaved = true;\n        this.isError = false;\n        this.updateSaveStatus();\n        // Log saved\n        console.info(`Saved ${fullId}`);\n        // Success\n        return true;\n    }\n    checkValidToSave() {\n        if (this.current === undefined) {\n            console.warn(\"No parcel loaded, not saving\");\n            this.isError = true;\n            this.updateSaveStatus();\n            return false;\n        }\n        const fullId = `${this.editorType}:${this.current.id}`;\n        // Validate the full id\n        if (!(0, $hYoLG.regex_id_full).test(fullId)) {\n            console.warn(`Given invalid full ID: ${fullId} to save`);\n            this.isError = true;\n            this.updateSaveStatus();\n            return false;\n        }\n        if (!this.checkAllInputValidity()) {\n            console.warn(`There is an invalid input in the editor!`);\n            this.isError = true;\n            this.updateSaveStatus();\n            return false;\n        }\n        // All checks passed\n        this.isError = false;\n        return true;\n    }\n    delayedSave() {\n        this.isSaved = false; // Reset isSaved to false\n        if (this.saveTimeout) clearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n        this.saveTimeout = window.setTimeout(()=>{\n            this.save();\n        }, 5000);\n        this.updateSaveStatus();\n    }\n    confirmChangestateSave() {\n        if (this.current === undefined) // If there is nothing to save, we can continue\n        return true;\n        if (!this.save()) {\n            if (confirm(\"Unable to save, are you sure you would like to continue?\")) // Unable to save but continue anyway\n            return true;\n            else // Unable to save, not continuing\n            return false;\n        } else // Saved and can continue\n        return true;\n    }\n    load(full_id) {\n        if (!this.confirmChangestateSave()) // Has object loaded, isn't saved, and cannot be saved for some reason.\n        // User does not want to continue\n        return false;\n        // If the ID is invalid, don't load\n        if ((0, $hYoLG.regex_id_full).test(full_id) === false) {\n            console.warn(`Given invalid full ID: ${full_id} to load`);\n            return false;\n        }\n        // If this is the wrong type of editor, don't load\n        if (full_id.startsWith(this.editorType) === false) {\n            console.warn(`Given wrong editor type: ${full_id} to load\\n Expected: ${this.editorType}`);\n            return false;\n        }\n        // Load it from storage into tempParcel\n        let tempParcel = JSON.parse(localStorage.getItem(full_id));\n        // If it doesn't exist, don't load\n        if (tempParcel === null) {\n            console.warn(`Given parcel doesn't exist: ${full_id} to load`);\n            return false;\n        }\n        let baseParcel = this.generateEmptyParcel(tempParcel.id, \"Undefined Name\");\n        Object.assign(baseParcel, tempParcel);\n        this.current = baseParcel;\n        return true;\n    }\n    exportData(full_id) {\n        this.save();\n        let dataString = localStorage.getItem(full_id);\n        if (dataString === null) {\n            console.error(`Given ${full_id} to export, failed to find in localStorage`);\n            return;\n        }\n        return dataString;\n    }\n    saveExportData(full_id) {\n        if (full_id === \"current\") full_id = `${this.editorType}:${this.current.id}`;\n        let data = this.exportData(full_id);\n        // Save as a text file with the full id as the name.\n        // Saves it in the downloads folder\n        let blob = new Blob([\n            data\n        ], {\n            type: \"text/plain\"\n        });\n        let url = URL.createObjectURL(blob);\n        let link = document.createElement(\"a\");\n        link.download = `${full_id}.json`;\n        link.href = url;\n        link.click();\n        URL.revokeObjectURL(url);\n    }\n    delete(full_id) {\n        if ((0, $hYoLG.regex_id_full).test(full_id) === false) {\n            console.warn(`Given invalid full ID: ${full_id} to delete`);\n            return false;\n        }\n        if (this.current !== undefined && `${this.current.type}:${this.current.id}` === full_id) {\n            this.current = undefined;\n            this.clearRender();\n        }\n        localStorage.removeItem(full_id);\n        console.log(`Deleted ${full_id}`);\n        this.update();\n        return true;\n    }\n    registerInvalid(full_id) {\n        if ((0, $hYoLG.regex_id_full).test(full_id) === false) {\n            console.warn(`Given invalid full ID: ${full_id} to register as invalid`);\n            return false;\n        }\n        let knownInvalids = JSON.parse(localStorage.getItem(\"editor_knownInvalids\") || \"[]\");\n        knownInvalids.push([\n            full_id,\n            true\n        ]);\n        return true;\n    }\n    generateTextInput(property, property_name, properties = []) {\n        const wrapper = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.innerHTML = property_name;\n        const text = document.createElement(\"input\");\n        text.value = this.current[property];\n        text.addEventListener(\"input\", ()=>{\n            this.current[property] = text.value;\n            this.delayedSave();\n        });\n        // Special properties\n        if (properties.includes(\"spellcheck\")) text.spellcheck = true;\n        if (properties.includes(\"notEmpty\")) {\n            text.minLength = 1;\n            text.required = true;\n        }\n        if (properties.includes(\"readonly\")) text.readOnly = true;\n        if (properties.includes(\"regexId\")) text.pattern = \"[a-z]([a-z_]*[a-z])?\";\n        else if (properties.includes(\"regexName\")) text.pattern = \"[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?\";\n        wrapper.appendChild(label);\n        wrapper.appendChild(text);\n        return wrapper;\n    }\n    generateTextArea(property, property_name, properties = []) {\n        const wrapper = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.innerHTML = property_name;\n        const text = document.createElement(\"textarea\");\n        text.value = this.current[property];\n        text.rows = 4;\n        text.addEventListener(\"input\", ()=>{\n            this.current[property] = text.value;\n            this.delayedSave();\n        });\n        // Special properties\n        if (properties.includes(\"spellcheck\")) text.spellcheck = true;\n        if (properties.includes(\"notEmpty\")) {\n            text.minLength = 1;\n            text.required = true;\n        }\n        if (properties.includes(\"readonly\")) text.readOnly = true;\n        wrapper.appendChild(label);\n        wrapper.appendChild(text);\n        return wrapper;\n    }\n    generateNumberInput(property, property_name, properties = []) {\n        const wrapper = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.innerHTML = property_name;\n        const text = document.createElement(\"input\");\n        text.type = \"number\";\n        text.value = this.current[property];\n        text.addEventListener(\"input\", ()=>{\n            if (!Number.isNaN(text.valueAsNumber)) this.current[property] = Number(text.valueAsNumber);\n            else this.isError = true;\n            this.delayedSave();\n        });\n        // Special properties\n        if (properties.includes(\"notNegative\")) text.min = \"0\";\n        else if (properties.includes(\"notZero\")) text.min = \"1\";\n        if (properties.includes(\"notEmpty\")) text.required = true;\n        wrapper.appendChild(label);\n        wrapper.appendChild(text);\n        return wrapper;\n    }\n    generateDeleteButton(full_id) {\n        const wrapper = document.createElement(\"div\");\n        wrapper.className = \"delete\";\n        const button = document.createElement(\"button\");\n        button.innerHTML = \"Delete\";\n        button.addEventListener(\"click\", ()=>{\n            if (confirm(\"Deletion is permanent, are you sure you want to continue?\")) this.delete(full_id);\n        });\n        wrapper.append(button);\n        return wrapper;\n    }\n    generateOnUnlock(wrapper) {\n        if (this.current === undefined || this.current.onUnlock === undefined) // throw new Error(\"Current editor is not designed for use with the onUnlock generator\");\n        return false;\n        wrapper.className = \"onUnlockWrapper doubles\";\n        wrapper.innerHTML = \"\";\n        // If no events exist generate a no events found message\n        if (this.events.length == 0) {\n            const notice = document.createElement(\"h2\");\n            notice.innerHTML = \"No events found\";\n            wrapper.appendChild(notice);\n            return false;\n        }\n        if (this.current.onUnlock.length == 0) {\n            const notice = document.createElement(\"h2\");\n            notice.innerHTML = `No onUnlock`;\n            wrapper.appendChild(notice);\n        }\n        // Generate element for each onUnlock\n        // Generate a delete button for each onUnlock\n        for(const i in this.current.onUnlock){\n            const inner_wrapper = document.createElement(\"div\");\n            console.log(this.current.onUnlock);\n            console.log(this.current.onUnlock[i]);\n            const eventInput = this.generateSelectElement([\n                \"events\"\n            ]);\n            eventInput.value = this.current.onUnlock[i];\n            eventInput.addEventListener(\"change\", ()=>{\n                this.current.onUnlock[i] = eventInput.value;\n                this.delayedSave();\n                this.generateOnUnlock(wrapper);\n            });\n            const inputDelete = document.createElement(\"button\");\n            inputDelete.innerHTML = \"X\";\n            inputDelete.addEventListener(\"click\", ()=>{\n                this.current.onUnlock.splice(Number(i), 1);\n                this.delayedSave();\n                this.generateOnUnlock(wrapper);\n            });\n            inner_wrapper.appendChild(eventInput);\n            inner_wrapper.appendChild(inputDelete);\n            wrapper.append(inner_wrapper);\n        }\n        // Generate a add button\n        const add_button = document.createElement(\"button\");\n        add_button.className = \"add\";\n        add_button.innerHTML = \"Add new onUnlock event\";\n        add_button.addEventListener(\"click\", ()=>{\n            this.current.onUnlock.push(`#0`);\n            this.delayedSave();\n            this.generateOnUnlock(wrapper);\n        });\n        wrapper.append(add_button);\n        // Return\n        return true;\n    }\n    generateOnReach(wrapper) {\n        if (this.current === undefined || this.current.onReach === undefined) // throw new Error(\"Current editor is not designed for use with the onReach generator\");\n        return false;\n        wrapper.className = \"onReachWrapper triples\";\n        wrapper.innerHTML = \"\";\n        // If no events exist generate a no events found message\n        if (this.events.length == 0) {\n            const notice = document.createElement(\"h2\");\n            notice.innerHTML = \"No events found\";\n            wrapper.appendChild(notice);\n            return false;\n        }\n        if (this.current.onReach.length == 0) {\n            const notice = document.createElement(\"h2\");\n            notice.innerHTML = `No onReach`;\n            wrapper.appendChild(notice);\n        }\n        // Generate element for each onReach\n        // Generate a delete button for each onReach\n        for(const i in this.current.onReach){\n            const inner_wrapper = document.createElement(\"div\");\n            const number_input = document.createElement(\"input\");\n            number_input.value = String(this.current.onReach[i][0]);\n            number_input.type = \"number\";\n            number_input.addEventListener(\"change\", ()=>{\n                this.current.onReach[i][0] = number_input.valueAsNumber;\n                this.delayedSave();\n            });\n            const eventInput = this.generateSelectElement([\n                \"events\"\n            ]);\n            eventInput.value = this.current.onReach[i][1];\n            eventInput.addEventListener(\"change\", ()=>{\n                this.current.onReach[i][1] = eventInput.value;\n                this.delayedSave();\n                this.generateOnReach(wrapper);\n            });\n            const inputDelete = document.createElement(\"button\");\n            inputDelete.innerHTML = \"X\";\n            inputDelete.addEventListener(\"click\", ()=>{\n                this.current.onReach.splice(Number(i), 1);\n                this.delayedSave();\n                this.generateOnReach(wrapper);\n            });\n            inner_wrapper.appendChild(number_input);\n            inner_wrapper.appendChild(eventInput);\n            inner_wrapper.appendChild(inputDelete);\n            wrapper.append(inner_wrapper);\n        }\n        // Generate a add button\n        const add_button = document.createElement(\"button\");\n        add_button.className = \"add\";\n        add_button.innerHTML = \"Add new onReach event\";\n        add_button.addEventListener(\"click\", ()=>{\n            this.current.onReach.push([\n                5,\n                `#0`\n            ]);\n            this.delayedSave();\n            this.generateOnReach(wrapper);\n        });\n        wrapper.append(add_button);\n        // Return\n        return true;\n    }\n    generateSelectElement(types) {\n        const select = document.createElement(\"select\");\n        for(const i in types){\n            const currentType = types[i];\n            for(const j in this[currentType]){\n                const option = document.createElement(\"option\");\n                option.innerHTML = this[currentType][j];\n                option.value = this[currentType][j];\n                select.appendChild(option);\n            }\n        }\n        return select;\n    }\n    generateQuantityPanel(property, main_wrapper) {\n        console.log(\"Generating\");\n        main_wrapper.innerHTML = \"\";\n        main_wrapper.className = `${property} triples`;\n        if (this.current === undefined) return false;\n        if (this.current[property].length == 0) {\n            const notice = document.createElement(\"h2\");\n            notice.innerHTML = `No ${property}`;\n            main_wrapper.appendChild(notice);\n        }\n        let validParcelType = [];\n        if (property == \"action\") validParcelType = [\n            \"resources\",\n            \"structures\",\n            \"research\"\n        ];\n        else if (property == \"consumes\") validParcelType = [\n            \"resources\"\n        ];\n        else validParcelType = [\n            \"resources\",\n            \"structures\",\n            \"research\"\n        ];\n        for(const i in this.current[property]){\n            const wrapper = document.createElement(\"div\");\n            const resource_input = this.generateSelectElement(validParcelType);\n            resource_input.value = this.current[property][i][0];\n            resource_input.addEventListener(\"change\", ()=>{\n                this.current[property][i][0] = resource_input.value;\n                this.delayedSave();\n            });\n            const number_input = document.createElement(\"input\");\n            number_input.value = this.current[property][i][1];\n            number_input.type = \"number\";\n            number_input.addEventListener(\"change\", ()=>{\n                this.current[property][i][1] = number_input.valueAsNumber;\n                this.delayedSave();\n            });\n            const inputDelete = document.createElement(\"button\");\n            inputDelete.innerHTML = \"X\";\n            inputDelete.addEventListener(\"click\", ()=>{\n                this.current[property].splice(Number(i), 1);\n                this.generateQuantityPanel(property, main_wrapper);\n                this.delayedSave();\n            });\n            wrapper.appendChild(resource_input);\n            wrapper.appendChild(number_input);\n            wrapper.appendChild(inputDelete);\n            main_wrapper.append(wrapper);\n        }\n        const add_button = document.createElement(\"button\");\n        add_button.className = \"add\";\n        add_button.innerHTML = \"Add new \" + property;\n        add_button.addEventListener(\"click\", ()=>{\n            this.current[property].push([\n                \"\",\n                0\n            ]);\n            this.generateQuantityPanel(property, main_wrapper);\n        });\n        main_wrapper.append(add_button);\n        return true;\n    }\n    constructor(){\n        this.isSaved = true;\n        this.isError = false;\n        // List of all parcels information\n        this.parcels = [];\n        // List of each type of parcel\n        this.resources = [];\n        this.structures = [];\n        this.research = [];\n        this.unique = [];\n        // List of interactions and events\n        this.interactions = [];\n        this.events = [];\n    }\n}\n\n});\nparcelRegister(\"6F8RI\", function(module, exports) {\n\n$parcel$export(module.exports, \"editor_version\", () => $e188284dcc7af615$export$bbdcf6cb8450a412);\nconst $e188284dcc7af615$export$bbdcf6cb8450a412 = \"7.2.16\";\n\n});\n\nparcelRegister(\"hYoLG\", function(module, exports) {\n\n$parcel$export(module.exports, \"regex_id\", () => $bb7941350009d33a$export$13cabed84998b941);\n$parcel$export(module.exports, \"regex_name\", () => $bb7941350009d33a$export$3cc283a187d82791);\n$parcel$export(module.exports, \"regex_id_full\", () => $bb7941350009d33a$export$19681d69a59327c9);\n$parcel$export(module.exports, \"regex_number\", () => $bb7941350009d33a$export$3880b27c49328926);\n$parcel$export(module.exports, \"regex_hash_number\", () => $bb7941350009d33a$export$d71a6ae9d2d26111);\n// ? regexID --> Contains only lowercase letters and underscores, cannot start or end with an underscore\nconst $bb7941350009d33a$export$13cabed84998b941 = new RegExp(\"^[a-z]([a-z_]*[a-z])?$\");\nconst $bb7941350009d33a$export$3cc283a187d82791 = new RegExp(\"^[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?$\");\nconst $bb7941350009d33a$export$19681d69a59327c9 = new RegExp(`(^(resource|structure|research|unique)\\:(([a-z]([a-z_]*[a-z])?))$)|(^(interaction|event)\\:\\#[0-9]*)$`);\nconst $bb7941350009d33a$export$3880b27c49328926 = new RegExp(\"^([0-9])*$\");\nconst $bb7941350009d33a$export$d71a6ae9d2d26111 = new RegExp(\"^#([0-9])*$\");\n\n});\n\n\n\n//# sourceMappingURL=resource.cb3432d9.js.map\n","import { editor_version } from \"./logging\";\nimport {\n\tresource_interface,\n\tstructure_interface,\n\tresearch_interface,\n\tall_interfaces,\n\tevent_reference,\n} from \"./parcel_interfaces\";\nimport { regex_id_full } from \"./regexes\";\nimport { any_id, full_id, id, interface_types, invalid_register } from \"./types\";\n\nexport type inputProperties = \"spellcheck\" | \"notEmpty\" | \"readonly\" | \"regexId\" | \"regexName\" | \"notZero\" | \"notNegative\";\n\nexport abstract class BaseEditorClass {\n\tabstract editorType: \"resource\" | \"structure\" | \"research\" | \"unique\" | \"interaction\" | \"event\"; // Type of object this editor edits\n\tabstract editorVersion: number; // Version of this specific editor\n\tprivate saveTimeout: number | undefined;\n\tpublic isSaved: boolean = true;\n\tpublic isError: boolean = false;\n\n\t// The object currently loaded in the editor. Each editor chooses a single type to edit\n\tpublic current: all_interfaces | undefined;\n\n\t// List of all parcels information\n\tpublic parcels: full_id[] = [];\n\t// List of each type of parcel\n\tpublic resources: full_id[] = [];\n\tpublic structures: full_id[] = [];\n\tpublic research: full_id[] = [];\n\tpublic unique: full_id[] = [];\n\n\t// List of interactions and events\n\tpublic interactions: full_id[] = [];\n\tpublic events: full_id[] = [];\n\n\tinit() {\n\t\tconsole.log(\n\t\t\t`Parcel Editor Version ${editor_version} - Starting up.\\nLoading ${this.editorType} editor - Version ${this.editorVersion}`\n\t\t);\n\t\tthis.checkStorage();\n\t\tthis.logStorageCount();\n\t\tthis.logStorage();\n\t}\n\n\tupdate() {\n\t\tthis.checkStorage();\n\t}\n\n\tcheckStorage() {\n\t\tthis.parcels = [];\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tif (!regex_id_full.test(localStorage.key(i) as string)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.parcels.push(localStorage.key(i) as full_id);\n\t\t}\n\t\tthis.sortStorage();\n\t}\n\tprivate sortStorage(): void {\n\t\tthis.parcels.sort((a, b) => a.localeCompare(b));\n\t\t// Assign all \"resource:\" to this.resources\n\t\tthis.resources = this.parcels.filter((id) => id.startsWith(\"resource:\"));\n\t\t// Assign all \"structure:\" to this.structures\n\t\tthis.structures = this.parcels.filter((id) => id.startsWith(\"structure:\"));\n\t\t// Assign all \"research:\" to this.research\n\t\tthis.research = this.parcels.filter((id) => id.startsWith(\"research:\"));\n\t\t// Assign all \"unique:\" to this.unique\n\t\tthis.unique = this.parcels.filter((id) => id.startsWith(\"unique:\"));\n\t\t// Assign all \"interaction:\" to this.interactions\n\t\tthis.interactions = this.parcels.filter((id) => id.startsWith(\"interaction:\"));\n\t\t// Assign all \"event:\" to this.events\n\t\tthis.events = this.parcels.filter((id) => id.startsWith(\"event:\"));\n\t}\n\tlogStorage() {\n\t\tconsole.table({\n\t\t\tResources: this.resources,\n\t\t\tStructures: this.structures,\n\t\t\tResearch: this.research,\n\t\t\tUnique: this.unique,\n\t\t\tInteractions: this.interactions,\n\t\t\tEvents: this.events,\n\t\t});\n\t}\n\tlogStorageCount() {\n\t\tconsole.table({\n\t\t\tTotal: [this.parcels.length],\n\t\t\tResources: [this.resources.length],\n\t\t\tStructures: [this.structures.length],\n\t\t\tResearch: [this.research.length],\n\t\t\tUnique: [this.unique.length],\n\t\t\tInteractions: [this.interactions.length],\n\t\t\tEvents: [this.events.length],\n\t\t});\n\t}\n\tsave() {\n\t\tif (!this.checkValidToSave()) {\n\t\t\tconsole.warn(\"Parcel is not valid and cannot be saved\");\n\t\t\tthis.isError = true;\n\t\t\tthis.updateSaveStatus();\n\t\t\t// Fail\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the full id\n\t\tconst fullId = `${this.editorType}:${this.current!.id}`;\n\t\t// Clear delayed saving\n\t\tif (this.saveTimeout) {\n\t\t\tclearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n\t\t}\n\t\t// Save it\n\t\tlocalStorage.setItem(fullId, JSON.stringify(this.current));\n\t\t// Update saved state and saved status\n\t\tthis.isSaved = true;\n\t\tthis.isError = false;\n\t\tthis.updateSaveStatus();\n\t\t// Log saved\n\t\tconsole.info(`Saved ${fullId}`);\n\t\t// Success\n\t\treturn true;\n\t}\n\tcheckValidToSave(): boolean {\n\t\tif (this.current === undefined) {\n\t\t\tconsole.warn(\"No parcel loaded, not saving\");\n\t\t\tthis.isError = true;\n\t\t\tthis.updateSaveStatus();\n\t\t\treturn false;\n\t\t}\n\t\tconst fullId = `${this.editorType}:${this.current.id}`;\n\t\t// Validate the full id\n\t\tif (!regex_id_full.test(fullId)) {\n\t\t\tconsole.warn(`Given invalid full ID: ${fullId} to save`);\n\t\t\tthis.isError = true;\n\t\t\tthis.updateSaveStatus();\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.checkAllInputValidity()) {\n\t\t\tconsole.warn(`There is an invalid input in the editor!`);\n\t\t\tthis.isError = true;\n\t\t\tthis.updateSaveStatus();\n\t\t\treturn false;\n\t\t}\n\t\t// All checks passed\n\t\tthis.isError = false;\n\t\treturn true;\n\t}\n\tabstract checkAllInputValidity(): boolean;\n\tdelayedSave() {\n\t\tthis.isSaved = false; // Reset isSaved to false\n\t\tif (this.saveTimeout) {\n\t\t\tclearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n\t\t}\n\t\tthis.saveTimeout = window.setTimeout(() => {\n\t\t\tthis.save();\n\t\t}, 5000);\n\t\tthis.updateSaveStatus();\n\t}\n\tabstract updateSaveStatus(): void;\n\n\tconfirmChangestateSave(): boolean {\n\t\tif (this.current === undefined) {\n\t\t\t// If there is nothing to save, we can continue\n\t\t\treturn true;\n\t\t}\n\t\tif (!this.save()) {\n\t\t\tif (confirm(\"Unable to save, are you sure you would like to continue?\")) {\n\t\t\t\t// Unable to save but continue anyway\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t// Unable to save, not continuing\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\t// Saved and can continue\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tload(full_id: full_id): boolean {\n\t\tif (!this.confirmChangestateSave()) {\n\t\t\t// Has object loaded, isn't saved, and cannot be saved for some reason.\n\t\t\t// User does not want to continue\n\t\t\treturn false;\n\t\t}\n\t\t// If the ID is invalid, don't load\n\t\tif (regex_id_full.test(full_id) === false) {\n\t\t\tconsole.warn(`Given invalid full ID: ${full_id} to load`);\n\t\t\treturn false;\n\t\t}\n\t\t// If this is the wrong type of editor, don't load\n\t\tif (full_id.startsWith(this.editorType) === false) {\n\t\t\tconsole.warn(`Given wrong editor type: ${full_id} to load\\n Expected: ${this.editorType}`);\n\t\t\treturn false;\n\t\t}\n\t\t// Load it from storage into tempParcel\n\t\tlet tempParcel = JSON.parse(localStorage.getItem(full_id) as string);\n\n\t\t// If it doesn't exist, don't load\n\t\tif (tempParcel === null) {\n\t\t\tconsole.warn(`Given parcel doesn't exist: ${full_id} to load`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet baseParcel = this.generateEmptyParcel(tempParcel.id, \"Undefined Name\");\n\t\tObject.assign(baseParcel, tempParcel);\n\n\t\tthis.current = baseParcel;\n\n\t\treturn true;\n\t}\n\n\texportData(full_id: full_id): string | undefined {\n\t\tthis.save();\n\t\tlet dataString = localStorage.getItem(full_id);\n\t\tif (dataString === null) {\n\t\t\tconsole.error(`Given ${full_id} to export, failed to find in localStorage`);\n\t\t\treturn;\n\t\t}\n\t\treturn dataString;\n\t}\n\n\tsaveExportData(full_id: full_id | \"current\") {\n\t\tif (full_id === \"current\") {\n\t\t\tfull_id = `${this.editorType}:${this.current!.id}` as full_id;\n\t\t}\n\t\tlet data = this.exportData(full_id);\n\t\t// Save as a text file with the full id as the name.\n\t\t// Saves it in the downloads folder\n\t\tlet blob = new Blob([data as string], { type: \"text/plain\" });\n\t\tlet url = URL.createObjectURL(blob);\n\t\tlet link = document.createElement(\"a\");\n\t\tlink.download = `${full_id}.json`;\n\t\tlink.href = url;\n\t\tlink.click();\n\t\tURL.revokeObjectURL(url);\n\t}\n\n\tabstract generateEmptyParcel(id: id | number, name: string): all_interfaces;\n\n\tabstract create(): boolean;\n\n\tdelete(full_id: any_id) {\n\t\tif (regex_id_full.test(full_id) === false) {\n\t\t\tconsole.warn(`Given invalid full ID: ${full_id} to delete`);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.current !== undefined && `${this.current.type}:${this.current.id}` === full_id) {\n\t\t\tthis.current = undefined;\n\t\t\tthis.clearRender();\n\t\t}\n\t\tlocalStorage.removeItem(full_id);\n\t\tconsole.log(`Deleted ${full_id}`);\n\t\tthis.update();\n\t\treturn true;\n\t}\n\n\tabstract clearRender(): void;\n\n\tregisterInvalid(full_id: full_id) {\n\t\tif (regex_id_full.test(full_id) === false) {\n\t\t\tconsole.warn(`Given invalid full ID: ${full_id} to register as invalid`);\n\t\t\treturn false;\n\t\t}\n\t\tlet knownInvalids: invalid_register[] = JSON.parse(localStorage.getItem(\"editor_knownInvalids\") || \"[]\") as invalid_register[];\n\t\tknownInvalids.push([full_id, true]);\n\t\treturn true;\n\t}\n\n\tpublic generateTextInput(property: string, property_name: string, properties: inputProperties[] = []): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.innerHTML = property_name;\n\n\t\tconst text = document.createElement(\"input\");\n\t\ttext.value = this.current![property];\n\t\ttext.addEventListener(\"input\", () => {\n\t\t\tthis.current![property] = text.value;\n\t\t\tthis.delayedSave();\n\t\t});\n\n\t\t// Special properties\n\t\tif (properties.includes(\"spellcheck\")) {\n\t\t\ttext.spellcheck = true;\n\t\t}\n\t\tif (properties.includes(\"notEmpty\")) {\n\t\t\ttext.minLength = 1;\n\t\t\ttext.required = true;\n\t\t}\n\t\tif (properties.includes(\"readonly\")) {\n\t\t\ttext.readOnly = true;\n\t\t}\n\t\tif (properties.includes(\"regexId\")) {\n\t\t\ttext.pattern = \"[a-z]([a-z_]*[a-z])?\";\n\t\t} else if (properties.includes(\"regexName\")) {\n\t\t\ttext.pattern = \"[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?\";\n\t\t}\n\n\t\twrapper.appendChild(label);\n\t\twrapper.appendChild(text);\n\n\t\treturn wrapper;\n\t}\n\tpublic generateTextArea(property: string, property_name: string, properties: inputProperties[] = []): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.innerHTML = property_name;\n\n\t\tconst text = document.createElement(\"textarea\");\n\t\ttext.value = this.current![property];\n\t\ttext.rows = 4;\n\t\ttext.addEventListener(\"input\", () => {\n\t\t\tthis.current![property] = text.value;\n\t\t\tthis.delayedSave();\n\t\t});\n\n\t\t// Special properties\n\t\tif (properties.includes(\"spellcheck\")) {\n\t\t\ttext.spellcheck = true;\n\t\t}\n\t\tif (properties.includes(\"notEmpty\")) {\n\t\t\ttext.minLength = 1;\n\t\t\ttext.required = true;\n\t\t}\n\t\tif (properties.includes(\"readonly\")) {\n\t\t\ttext.readOnly = true;\n\t\t}\n\n\t\twrapper.appendChild(label);\n\t\twrapper.appendChild(text);\n\n\t\treturn wrapper;\n\t}\n\tpublic generateNumberInput(property: string, property_name: string, properties: inputProperties[] = []): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.innerHTML = property_name;\n\n\t\tconst text = document.createElement(\"input\");\n\t\ttext.type = \"number\";\n\t\ttext.value = this.current![property];\n\t\ttext.addEventListener(\"input\", () => {\n\t\t\tif (!Number.isNaN(text.valueAsNumber)) {\n\t\t\t\tthis.current![property] = Number(text.valueAsNumber);\n\t\t\t} else {\n\t\t\t\tthis.isError = true;\n\t\t\t}\n\t\t\tthis.delayedSave();\n\t\t});\n\n\t\t// Special properties\n\t\tif (properties.includes(\"notNegative\")) {\n\t\t\ttext.min = \"0\";\n\t\t} else if (properties.includes(\"notZero\")) {\n\t\t\ttext.min = \"1\";\n\t\t}\n\t\tif (properties.includes(\"notEmpty\")) {\n\t\t\ttext.required = true;\n\t\t}\n\n\t\twrapper.appendChild(label);\n\t\twrapper.appendChild(text);\n\n\t\treturn wrapper;\n\t}\n\tpublic generateDeleteButton(full_id: any_id): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"delete\";\n\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.innerHTML = \"Delete\";\n\t\tbutton.addEventListener(\"click\", () => {\n\t\t\tif (confirm(\"Deletion is permanent, are you sure you want to continue?\")) {\n\t\t\t\tthis.delete(full_id);\n\t\t\t}\n\t\t});\n\n\t\twrapper.append(button);\n\t\treturn wrapper;\n\t}\n\tpublic generateOnUnlock(wrapper: HTMLDivElement): boolean {\n\t\tif (\n\t\t\t(this.current as research_interface | structure_interface | research_interface) === undefined ||\n\t\t\t(this.current as research_interface | structure_interface | research_interface).onUnlock === undefined\n\t\t) {\n\t\t\t// throw new Error(\"Current editor is not designed for use with the onUnlock generator\");\n\t\t\treturn false;\n\t\t}\n\t\twrapper.className = \"onUnlockWrapper doubles\";\n\t\twrapper.innerHTML = \"\";\n\t\t// If no events exist generate a no events found message\n\t\tif (this.events.length == 0) {\n\t\t\tconst notice = document.createElement(\"h2\");\n\t\t\tnotice.innerHTML = \"No events found\";\n\t\t\twrapper.appendChild(notice);\n\t\t\treturn false;\n\t\t}\n\t\tif ((this.current as research_interface | structure_interface | research_interface).onUnlock.length == 0) {\n\t\t\tconst notice = document.createElement(\"h2\");\n\t\t\tnotice.innerHTML = `No onUnlock`;\n\t\t\twrapper.appendChild(notice);\n\t\t}\n\n\t\t// Generate element for each onUnlock\n\t\t// Generate a delete button for each onUnlock\n\t\tfor (const i in (this.current as research_interface | structure_interface | research_interface).onUnlock) {\n\t\t\tconst inner_wrapper = document.createElement(\"div\");\n\t\t\tconsole.log((this.current as research_interface | structure_interface | research_interface).onUnlock);\n\t\t\tconsole.log((this.current as research_interface | structure_interface | research_interface).onUnlock[i]);\n\n\t\t\tconst eventInput = this.generateSelectElement([\"events\"]);\n\t\t\teventInput.value = (this.current as research_interface | structure_interface | research_interface).onUnlock[i];\n\t\t\teventInput.addEventListener(\"change\", () => {\n\t\t\t\t(this.current as research_interface | structure_interface | research_interface).onUnlock[i] =\n\t\t\t\t\teventInput.value as event_reference;\n\t\t\t\tthis.delayedSave();\n\t\t\t\tthis.generateOnUnlock(wrapper);\n\t\t\t});\n\n\t\t\tconst inputDelete = document.createElement(\"button\");\n\t\t\tinputDelete.innerHTML = \"X\";\n\t\t\tinputDelete.addEventListener(\"click\", () => {\n\t\t\t\t(this.current as research_interface | structure_interface | research_interface).onUnlock.splice(Number(i), 1);\n\t\t\t\tthis.delayedSave();\n\t\t\t\tthis.generateOnUnlock(wrapper);\n\t\t\t});\n\n\t\t\tinner_wrapper.appendChild(eventInput);\n\t\t\tinner_wrapper.appendChild(inputDelete);\n\t\t\twrapper.append(inner_wrapper);\n\t\t}\n\n\t\t// Generate a add button\n\t\tconst add_button = document.createElement(\"button\");\n\t\tadd_button.className = \"add\";\n\t\tadd_button.innerHTML = \"Add new onUnlock event\";\n\t\tadd_button.addEventListener(\"click\", () => {\n\t\t\t(this.current as research_interface | structure_interface | research_interface).onUnlock.push(`#0`);\n\t\t\tthis.delayedSave();\n\t\t\tthis.generateOnUnlock(wrapper);\n\t\t});\n\t\twrapper.append(add_button);\n\n\t\t// Return\n\t\treturn true;\n\t}\n\tpublic generateOnReach(wrapper: HTMLDivElement): boolean {\n\t\tif (\n\t\t\t(this.current as resource_interface | structure_interface) === undefined ||\n\t\t\t(this.current as resource_interface | structure_interface).onReach === undefined\n\t\t) {\n\t\t\t// throw new Error(\"Current editor is not designed for use with the onReach generator\");\n\t\t\treturn false;\n\t\t}\n\t\twrapper.className = \"onReachWrapper triples\";\n\t\twrapper.innerHTML = \"\";\n\t\t// If no events exist generate a no events found message\n\t\tif (this.events.length == 0) {\n\t\t\tconst notice = document.createElement(\"h2\");\n\t\t\tnotice.innerHTML = \"No events found\";\n\t\t\twrapper.appendChild(notice);\n\t\t\treturn false;\n\t\t}\n\t\tif ((this.current as resource_interface | structure_interface).onReach.length == 0) {\n\t\t\tconst notice = document.createElement(\"h2\");\n\t\t\tnotice.innerHTML = `No onReach`;\n\t\t\twrapper.appendChild(notice);\n\t\t}\n\n\t\t// Generate element for each onReach\n\t\t// Generate a delete button for each onReach\n\t\tfor (const i in (this.current as resource_interface | structure_interface).onReach) {\n\t\t\tconst inner_wrapper = document.createElement(\"div\");\n\n\t\t\tconst number_input = document.createElement(\"input\") as HTMLInputElement;\n\t\t\tnumber_input.value = String((this.current as resource_interface | structure_interface).onReach[i][0]);\n\t\t\tnumber_input.type = \"number\";\n\t\t\tnumber_input.addEventListener(\"change\", () => {\n\t\t\t\t(this.current as resource_interface | structure_interface).onReach[i][0] = number_input.valueAsNumber;\n\t\t\t\tthis.delayedSave();\n\t\t\t});\n\n\t\t\tconst eventInput = this.generateSelectElement([\"events\"]);\n\t\t\teventInput.value = (this.current as resource_interface | structure_interface).onReach[i][1];\n\t\t\teventInput.addEventListener(\"change\", () => {\n\t\t\t\t(this.current as resource_interface | structure_interface).onReach[i][1] = eventInput.value as event_reference;\n\t\t\t\tthis.delayedSave();\n\t\t\t\tthis.generateOnReach(wrapper);\n\t\t\t});\n\n\t\t\tconst inputDelete = document.createElement(\"button\");\n\t\t\tinputDelete.innerHTML = \"X\";\n\t\t\tinputDelete.addEventListener(\"click\", () => {\n\t\t\t\t(this.current as resource_interface | structure_interface).onReach.splice(Number(i), 1);\n\t\t\t\tthis.delayedSave();\n\t\t\t\tthis.generateOnReach(wrapper);\n\t\t\t});\n\n\t\t\tinner_wrapper.appendChild(number_input);\n\t\t\tinner_wrapper.appendChild(eventInput);\n\t\t\tinner_wrapper.appendChild(inputDelete);\n\t\t\twrapper.append(inner_wrapper);\n\t\t}\n\n\t\t// Generate a add button\n\t\tconst add_button = document.createElement(\"button\");\n\t\tadd_button.className = \"add\";\n\t\tadd_button.innerHTML = \"Add new onReach event\";\n\t\tadd_button.addEventListener(\"click\", () => {\n\t\t\t(this.current as resource_interface | structure_interface).onReach.push([5, `#0`]);\n\t\t\tthis.delayedSave();\n\t\t\tthis.generateOnReach(wrapper);\n\t\t});\n\t\twrapper.append(add_button);\n\n\t\t// Return\n\t\treturn true;\n\t}\n\n\tpublic generateSelectElement(types: interface_types[]): HTMLSelectElement {\n\t\tconst select = document.createElement(\"select\") as HTMLSelectElement;\n\n\t\tfor (const i in types) {\n\t\t\tconst currentType = types[i];\n\t\t\tfor (const j in this[currentType]) {\n\t\t\t\tconst option = document.createElement(\"option\");\n\t\t\t\toption.innerHTML = this[currentType][j];\n\t\t\t\toption.value = this[currentType][j];\n\t\t\t\tselect.appendChild(option);\n\t\t\t}\n\t\t}\n\n\t\treturn select;\n\t}\n\tgenerateQuantityPanel(property: \"action\" | \"resultIn\" | \"requires\" | \"consumes\", main_wrapper: HTMLDivElement): boolean {\n\t\tconsole.log(\"Generating\");\n\t\tmain_wrapper.innerHTML = \"\";\n\t\tmain_wrapper.className = `${property} triples`;\n\n\t\tif (this.current === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.current[property].length == 0) {\n\t\t\tconst notice = document.createElement(\"h2\");\n\t\t\tnotice.innerHTML = `No ${property}`;\n\t\t\tmain_wrapper.appendChild(notice);\n\t\t}\n\n\t\tlet validParcelType: interface_types[] = [];\n\n\t\tif (property == \"action\") {\n\t\t\tvalidParcelType = [\"resources\", \"structures\", \"research\"];\n\t\t} else if (property == \"consumes\") {\n\t\t\tvalidParcelType = [\"resources\"];\n\t\t} else {\n\t\t\tvalidParcelType = [\"resources\", \"structures\", \"research\"];\n\t\t}\n\n\t\tfor (const i in this.current[property]) {\n\t\t\tconst wrapper = document.createElement(\"div\");\n\n\t\t\tconst resource_input = this.generateSelectElement(validParcelType);\n\t\t\tresource_input.value = this.current[property][i][0];\n\t\t\tresource_input.addEventListener(\"change\", () => {\n\t\t\t\tthis.current![property][i][0] = resource_input.value;\n\t\t\t\tthis.delayedSave();\n\t\t\t});\n\n\t\t\tconst number_input = document.createElement(\"input\") as HTMLInputElement;\n\t\t\tnumber_input.value = this.current[property][i][1];\n\t\t\tnumber_input.type = \"number\";\n\t\t\tnumber_input.addEventListener(\"change\", () => {\n\t\t\t\tthis.current![property][i][1] = number_input.valueAsNumber;\n\t\t\t\tthis.delayedSave();\n\t\t\t});\n\t\t\tconst inputDelete = document.createElement(\"button\");\n\t\t\tinputDelete.innerHTML = \"X\";\n\t\t\tinputDelete.addEventListener(\"click\", () => {\n\t\t\t\tthis.current![property].splice(Number(i), 1);\n\t\t\t\tthis.generateQuantityPanel(property, main_wrapper);\n\t\t\t\tthis.delayedSave();\n\t\t\t});\n\t\t\twrapper.appendChild(resource_input);\n\t\t\twrapper.appendChild(number_input);\n\t\t\twrapper.appendChild(inputDelete);\n\t\t\tmain_wrapper.append(wrapper);\n\t\t}\n\n\t\tconst add_button = document.createElement(\"button\");\n\t\tadd_button.className = \"add\";\n\t\tadd_button.innerHTML = \"Add new \" + property;\n\t\tadd_button.addEventListener(\"click\", () => {\n\t\t\tthis.current![property].push([\"\", 0]);\n\t\t\tthis.generateQuantityPanel(property, main_wrapper);\n\t\t});\n\t\tmain_wrapper.append(add_button);\n\n\t\treturn true;\n\t}\n}\n\ndeclare global {\n\tinterface Window {\n\t\teditor: BaseEditorClass;\n\t}\n}","export const editor_version = \"7.2.16\";\n","// ? regexID --> Contains only lowercase letters and underscores, cannot start or end with an underscore\nexport const regex_id = new RegExp(\"^[a-z]([a-z_]*[a-z])?$\");\n// ? regexName --> Contains only letters and spaces, cannot start or end with a space\nexport const regex_name = new RegExp(\"^[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?$\");\n// ? regexFullID --> starts with a valid type, then a colon : then a valid regexID\nexport const regex_id_full = new RegExp(`(^(resource|structure|research|unique)\\:(([a-z]([a-z_]*[a-z])?))$)|(^(interaction|event)\\:\\#[0-9]*)$`);\n\n\n// ? Numbers only\nexport const regex_number = new RegExp(\"^([0-9])*$\")\n\n// ? Hash then number\nexport const regex_hash_number = new RegExp(\"^#([0-9])*$\")"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$f0a5947e9a01104b$export$5a86527663cb513c","$6F8RI","$hYoLG","console","log","editor_version","editorType","editorVersion","checkStorage","logStorageCount","logStorage","update","parcels","i","localStorage","length","regex_id_full","test","key","push","sortStorage","sort","a","b","localeCompare","resources","filter","startsWith","structures","research","unique","interactions","events","table","Resources","Structures","Research","Unique","Interactions","Events","Total","save","checkValidToSave","warn","isError","updateSaveStatus","fullId","current","saveTimeout","clearTimeout","setItem","JSON","stringify","isSaved","info","undefined","checkAllInputValidity","delayedSave","window","setTimeout","confirmChangestateSave","confirm","load","full_id","tempParcel","parse","getItem","baseParcel","generateEmptyParcel","assign","exportData","dataString","error","saveExportData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","delete","clearRender","removeItem","registerInvalid","knownInvalids","generateTextInput","property","property_name","properties","wrapper","label","innerHTML","text","value","addEventListener","includes","spellcheck","minLength","required","readOnly","pattern","appendChild","generateTextArea","rows","generateNumberInput","Number","isNaN","valueAsNumber","min","generateDeleteButton","className","button","append","generateOnUnlock","onUnlock","notice","inner_wrapper","eventInput","generateSelectElement","inputDelete","splice","add_button","generateOnReach","onReach","number_input","String","types","select","currentType","j","option","generateQuantityPanel","main_wrapper","validParcelType","resource_input","constructor","$e188284dcc7af615$export$bbdcf6cb8450a412","$bb7941350009d33a$export$13cabed84998b941","$bb7941350009d33a$export$3cc283a187d82791","$bb7941350009d33a$export$19681d69a59327c9","$bb7941350009d33a$export$3880b27c49328926","$bb7941350009d33a$export$d71a6ae9d2d26111","RegExp"],"version":3,"file":"resource.cb3432d9.js.map"}