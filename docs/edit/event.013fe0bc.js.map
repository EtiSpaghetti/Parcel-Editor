{"mappings":"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","sources":["<anon>","source/TypeScript/event_editor.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirea313\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirea313\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $2h5uG = parcelRequire(\"2h5uG\");\n\nvar $hYoLG = parcelRequire(\"hYoLG\");\n// Empty add id manager\nconst $dc74b086d590bec6$var$ADD_BUTTON = document.getElementById(\"add_event\");\nconst $dc74b086d590bec6$var$RESOURCE_PANEL = document.getElementById(\"show_panel\");\nconst $dc74b086d590bec6$var$RESOURCE_INFORMATION = document.getElementById(\"resource_information\");\nconst $dc74b086d590bec6$var$SAVED_INDICATOR = document.getElementById(\"saved_indicator\");\n// == Register editor ==\nclass $dc74b086d590bec6$var$EventEditorClass extends (0, $2h5uG.BaseEditorClass) {\n    init() {\n        super.init();\n        this.renderResourcePanel();\n        this.updateSaveStatus();\n    }\n    update() {\n        super.update();\n        this.renderResourcePanel();\n        this.updateSaveStatus();\n    }\n    generateEmptyParcel(id) {\n        return {\n            id: `#${id}`,\n            type: \"event\",\n            comment: \"\",\n            messages: [],\n            action: []\n        };\n    }\n    create() {\n        if (!this.confirmChangestateSave()) {\n            console.log(\"Cannot create parcel, was unable to save currently loaded parcel\");\n            return false;\n        }\n        // Get a list of ids from this.events\n        let existingIds = this.events.map((elem)=>Number(elem.split(\"#\")[1]));\n        // New id is an ID that is not currently in use\n        let newID = 1;\n        let isNewID = false;\n        while(!isNewID)if (existingIds.includes(newID)) newID++;\n        else isNewID = true;\n        this.current = this.generateEmptyParcel(newID);\n        this.save();\n        console.log(`Created ${this.current.id}`);\n        this.update();\n        return true;\n    }\n    updateSaveStatus() {\n        if (this.current === undefined) {\n            $dc74b086d590bec6$var$SAVED_INDICATOR.className = \"undefined\";\n            return;\n        } else if (this.isSaved) {\n            $dc74b086d590bec6$var$SAVED_INDICATOR.className = \"saved\";\n            return;\n        } else if (!this.isError && this.checkValidToSave()) {\n            $dc74b086d590bec6$var$SAVED_INDICATOR.className = \"unsaved\";\n            return;\n        } else {\n            $dc74b086d590bec6$var$SAVED_INDICATOR.className = \"error\";\n            return;\n        }\n    }\n    checkAllInputValidity() {\n        const inputs = $dc74b086d590bec6$var$RESOURCE_INFORMATION.getElementsByTagName(\"input\");\n        for(const i in inputs){\n            if (inputs[i].reportValidity && !inputs[i].reportValidity()) return false;\n        }\n        return true;\n    }\n    checkValidToSave() {\n        if (!super.checkValidToSave()) return false;\n        if (!(0, $hYoLG.regex_hash_number).test(this.current.id)) {\n            console.warn(`Given invalid ID: ${this.current.id} to save`);\n            this.isError = true;\n            this.updateSaveStatus();\n            return false;\n        }\n        return true;\n    }\n    clearRender() {\n        $dc74b086d590bec6$var$RESOURCE_PANEL.innerHTML = \"\";\n        $dc74b086d590bec6$var$RESOURCE_INFORMATION.innerHTML = \"\";\n        this.renderResourcePanel();\n    }\n    renderResourcePanel() {\n        $dc74b086d590bec6$var$RESOURCE_PANEL.innerHTML = \"\";\n        for(let i = 0; i < this.events.length; i++){\n            const button = document.createElement(\"button\");\n            button.innerHTML = this.events[i];\n            button.addEventListener(\"click\", ()=>{\n                console.log(`Loaded : ${this.events[i]}`);\n                this.load(this.events[i]);\n                this.renderResouceInformation();\n                this.updateSaveStatus();\n            });\n            $dc74b086d590bec6$var$RESOURCE_PANEL.appendChild(button);\n        }\n    }\n    renderResouceInformation() {\n        // If this.current is undefined, return\n        if (this.current === undefined) {\n            console.warn(\"No resource loaded\");\n            return;\n        }\n        // Generate a set of inputs for the resource\n        $dc74b086d590bec6$var$RESOURCE_INFORMATION.innerHTML = \"\";\n        const tlpanel = document.createElement(\"div\");\n        tlpanel.id = \"tlpanel\";\n        const trpanel = document.createElement(\"div\");\n        trpanel.id = \"trpanel\";\n        const bpanel = document.createElement(\"div\");\n        bpanel.id = \"bpanel\";\n        // ID\n        tlpanel.appendChild(this.generateTextInput(\"id\", \"ID\", [\n            \"notEmpty\",\n            \"readonly\"\n        ]));\n        // Comment\n        tlpanel.appendChild(this.generateTextArea(\"comment\", \"Comment\", [\n            \"spellcheck\"\n        ]));\n        // Messages (add/remove messages)\n        let messages_button = document.createElement(\"button\");\n        messages_button.innerHTML = \"messages\";\n        tlpanel.appendChild(messages_button);\n        messages_button.addEventListener(\"click\", ()=>{\n            this.renderMessagePanel();\n        });\n        // Actions (add/remove resources)\n        let actions_button = document.createElement(\"button\");\n        actions_button.innerHTML = \"actions\";\n        tlpanel.appendChild(actions_button);\n        actions_button.addEventListener(\"click\", ()=>{\n            this.renderQuantityPanel();\n        });\n        // Delete button\n        bpanel.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`));\n        $dc74b086d590bec6$var$RESOURCE_INFORMATION.appendChild(tlpanel);\n        $dc74b086d590bec6$var$RESOURCE_INFORMATION.appendChild(trpanel);\n        $dc74b086d590bec6$var$RESOURCE_INFORMATION.appendChild(bpanel);\n    }\n    renderQuantityPanel() {\n        console.log(\"Rendering Quantity Panel\");\n        const trpanel = document.getElementById(\"trpanel\");\n        this.generateQuantityPanel(\"action\", trpanel);\n    }\n    renderMessagePanel() {\n        const trpanel = document.getElementById(\"trpanel\");\n        trpanel.innerHTML = \"\";\n        trpanel.className = \"messages doubles\";\n        if (this.current.messages.length == 0) {\n            const notice = document.createElement(\"h2\");\n            notice.innerHTML = \"No messages\";\n            trpanel.appendChild(notice);\n        }\n        for(const i in this.current.messages){\n            const wrapper = document.createElement(\"div\");\n            const input = document.createElement(\"textarea\");\n            input.value = this.current.messages[i];\n            input.addEventListener(\"change\", ()=>{\n                this.current.messages[i] = input.value;\n                this.delayedSave();\n            });\n            const inputDelete = document.createElement(\"button\");\n            inputDelete.innerHTML = \"X\";\n            inputDelete.addEventListener(\"click\", ()=>{\n                this.current.messages.splice(Number(i), 1);\n                this.renderMessagePanel();\n                this.delayedSave();\n            });\n            wrapper.appendChild(input);\n            wrapper.appendChild(inputDelete);\n            trpanel.appendChild(wrapper);\n        }\n        const add_button = document.createElement(\"button\");\n        add_button.className = \"add\";\n        add_button.innerHTML = \"Add new message\";\n        add_button.addEventListener(\"click\", ()=>{\n            this.current.messages.push(\"\");\n            this.renderMessagePanel();\n        });\n        trpanel.append(add_button);\n    }\n    constructor(...args){\n        super(...args);\n        this.editorType = \"event\";\n        this.editorVersion = 1;\n    }\n}\n// == Initialize editor ==\n// Initialize editor, begin loading process and attach editor to window\nconst $dc74b086d590bec6$var$editor = new $dc74b086d590bec6$var$EventEditorClass();\n$dc74b086d590bec6$var$editor.init();\nwindow.editor = $dc74b086d590bec6$var$editor;\n$dc74b086d590bec6$var$ADD_BUTTON.addEventListener(\"click\", ()=>{\n    $dc74b086d590bec6$var$editor.create();\n});\n$dc74b086d590bec6$var$SAVED_INDICATOR.addEventListener(\"click\", ()=>{\n    $dc74b086d590bec6$var$editor.save();\n});\n// =! Development Utilities =!\nfunction $dc74b086d590bec6$var$generateExamples() {\n    let names = [\n        11,\n        22,\n        33,\n        44,\n        55,\n        66,\n        77,\n        88,\n        99\n    ];\n    for(let i = 0; i < names.length; i++){\n        $dc74b086d590bec6$var$editor.current = $dc74b086d590bec6$var$editor.generateEmptyParcel(names[i]);\n        $dc74b086d590bec6$var$editor.current.messages[0] = `Message for ${names[i]}`;\n        $dc74b086d590bec6$var$editor.current.action[0] = [\n            \"resource:example\",\n            names[i]\n        ];\n        $dc74b086d590bec6$var$editor.save();\n    }\n} // generateExamples();\n\n\n//# sourceMappingURL=event.013fe0bc.js.map\n","import { BaseEditorClass, inputProperties } from \"./editor_base\";\nimport { event_interface, resource_interface } from \"./parcel_interfaces\";\nimport { regex_hash_number, regex_id, regex_id_full, regex_name, regex_number } from \"./regexes\";\n\n// Empty add id manager\nconst ADD_BUTTON = document.getElementById(\"add_event\") as HTMLButtonElement;\n\nconst RESOURCE_PANEL = document.getElementById(\"show_panel\") as HTMLDivElement;\nconst RESOURCE_INFORMATION = document.getElementById(\"resource_information\") as HTMLDivElement;\nconst SAVED_INDICATOR = document.getElementById(\"saved_indicator\") as HTMLDivElement;\n\n// == Register editor ==\nclass EventEditorClass extends BaseEditorClass {\n\tpublic editorType: \"event\" = \"event\";\n\tpublic editorVersion: number = 1;\n\n\tpublic current: event_interface;\n\n\tinit() {\n\t\tsuper.init();\n\t\tthis.renderResourcePanel();\n\t\tthis.updateSaveStatus();\n\t}\n\n\tupdate() {\n\t\tsuper.update();\n\t\tthis.renderResourcePanel();\n\t\tthis.updateSaveStatus();\n\t}\n\n\tgenerateEmptyParcel(id: number): event_interface {\n\t\treturn {\n\t\t\tid: `#${id}`,\n\t\t\ttype: \"event\",\n\t\t\tcomment: \"\",\n\t\t\tmessages: [],\n\t\t\taction: [],\n\t\t};\n\t}\n\n\tcreate(): boolean {\n\t\tif (!this.confirmChangestateSave()) {\n\t\t\tconsole.log(\"Cannot create parcel, was unable to save currently loaded parcel\");\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get a list of ids from this.events\n\t\tlet existingIds = this.events.map((elem) => Number(elem.split(\"#\")[1]));\n\t\t// New id is an ID that is not currently in use\n\t\tlet newID = 1;\n\t\tlet isNewID = false;\n\n\t\twhile (!isNewID) {\n\t\t\tif (existingIds.includes(newID)) {\n\t\t\t\tnewID++;\n\t\t\t} else {\n\t\t\t\tisNewID = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.current = this.generateEmptyParcel(newID);\n\n\t\tthis.save();\n\t\tconsole.log(`Created ${this.current.id}`);\n\n\t\tthis.update();\n\n\t\treturn true;\n\t}\n\n\tupdateSaveStatus(): void {\n\t\tif (this.current === undefined) {\n\t\t\tSAVED_INDICATOR.className = \"undefined\";\n\t\t\treturn;\n\t\t} else if (this.isSaved) {\n\t\t\tSAVED_INDICATOR.className = \"saved\";\n\t\t\treturn;\n\t\t} else if (!this.isError && this.checkValidToSave()) {\n\t\t\tSAVED_INDICATOR.className = \"unsaved\";\n\t\t\treturn;\n\t\t} else {\n\t\t\tSAVED_INDICATOR.className = \"error\";\n\t\t\treturn;\n\t\t}\n\t}\n\n\tcheckAllInputValidity(): boolean {\n\t\tconst inputs = RESOURCE_INFORMATION.getElementsByTagName(\"input\");\n\t\tfor (const i in inputs) {\n\t\t\tif (inputs[i].reportValidity && !inputs[i].reportValidity()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tcheckValidToSave(): boolean {\n\t\tif (!super.checkValidToSave()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!regex_hash_number.test(this.current.id)) {\n\t\t\tconsole.warn(`Given invalid ID: ${this.current.id} to save`);\n\t\t\tthis.isError = true;\n\t\t\tthis.updateSaveStatus();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tclearRender() {\n\t\tRESOURCE_PANEL.innerHTML = \"\";\n\t\tRESOURCE_INFORMATION.innerHTML = \"\";\n\t\tthis.renderResourcePanel();\n\t}\n\n\trenderResourcePanel() {\n\t\tRESOURCE_PANEL.innerHTML = \"\";\n\t\tfor (let i = 0; i < this.events.length; i++) {\n\t\t\tconst button = document.createElement(\"button\");\n\t\t\tbutton.innerHTML = this.events[i];\n\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\tconsole.log(`Loaded : ${this.events[i]}`);\n\t\t\t\tthis.load(this.events[i]);\n\t\t\t\tthis.renderResouceInformation();\n\t\t\t\tthis.updateSaveStatus();\n\t\t\t});\n\t\t\tRESOURCE_PANEL.appendChild(button);\n\t\t}\n\t}\n\n\trenderResouceInformation() {\n\t\t// If this.current is undefined, return\n\t\tif (this.current === undefined) {\n\t\t\tconsole.warn(\"No resource loaded\");\n\t\t\treturn;\n\t\t}\n\t\t// Generate a set of inputs for the resource\n\t\tRESOURCE_INFORMATION.innerHTML = \"\";\n\n\t\tconst tlpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\ttlpanel.id = \"tlpanel\";\n\t\tconst trpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\ttrpanel.id = \"trpanel\";\n\t\tconst bpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\tbpanel.id = \"bpanel\";\n\n\t\t// ID\n\t\ttlpanel.appendChild(this.generateTextInput(\"id\", \"ID\", [\"notEmpty\", \"readonly\"]));\n\t\t// Comment\n\t\ttlpanel.appendChild(this.generateTextArea(\"comment\", \"Comment\", [\"spellcheck\"]));\n\n\t\t// Messages (add/remove messages)\n\t\tlet messages_button = document.createElement(\"button\");\n\t\tmessages_button.innerHTML = \"messages\";\n\t\ttlpanel.appendChild(messages_button);\n\t\tmessages_button.addEventListener(\"click\", () => {\n\t\t\tthis.renderMessagePanel();\n\t\t});\n\n\t\t// Actions (add/remove resources)\n\t\tlet actions_button = document.createElement(\"button\");\n\t\tactions_button.innerHTML = \"actions\";\n\t\ttlpanel.appendChild(actions_button);\n\t\tactions_button.addEventListener(\"click\", () => {\n\t\t\tthis.renderQuantityPanel();\n\t\t});\n\n\t\t// Delete button\n\t\tbpanel.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`));\n\n\t\tRESOURCE_INFORMATION.appendChild(tlpanel);\n\t\tRESOURCE_INFORMATION.appendChild(trpanel);\n\t\tRESOURCE_INFORMATION.appendChild(bpanel);\n\t}\n\trenderQuantityPanel() {\n\t\tconsole.log(\"Rendering Quantity Panel\");\n\t\tconst trpanel = document.getElementById(\"trpanel\")! as HTMLDivElement;\n\t\tthis.generateQuantityPanel(\"action\", trpanel);\n\t}\n\trenderMessagePanel() {\n\t\tconst trpanel = document.getElementById(\"trpanel\")!;\n\t\ttrpanel.innerHTML = \"\";\n\t\ttrpanel.className = \"messages doubles\";\n\n\t\tif (this.current.messages.length == 0) {\n\t\t\tconst notice = document.createElement(\"h2\");\n\t\t\tnotice.innerHTML = \"No messages\";\n\t\t\ttrpanel.appendChild(notice);\n\t\t}\n\n\t\tfor (const i in this.current.messages) {\n\t\t\tconst wrapper = document.createElement(\"div\");\n\n\t\t\tconst input = document.createElement(\"textarea\") as HTMLTextAreaElement;\n\t\t\tinput.value = this.current.messages[i];\n\t\t\tinput.addEventListener(\"change\", () => {\n\t\t\t\tthis.current.messages[i] = input.value;\n\t\t\t\tthis.delayedSave();\n\t\t\t});\n\t\t\tconst inputDelete = document.createElement(\"button\");\n\t\t\tinputDelete.innerHTML = \"X\";\n\t\t\tinputDelete.addEventListener(\"click\", () => {\n\t\t\t\tthis.current.messages.splice(Number(i), 1);\n\t\t\t\tthis.renderMessagePanel();\n\t\t\t\tthis.delayedSave();\n\t\t\t});\n\n\t\t\twrapper.appendChild(input);\n\t\t\twrapper.appendChild(inputDelete);\n\t\t\ttrpanel.appendChild(wrapper);\n\t\t}\n\n\t\tconst add_button = document.createElement(\"button\");\n\t\tadd_button.className = \"add\";\n\t\tadd_button.innerHTML = \"Add new message\";\n\t\tadd_button.addEventListener(\"click\", () => {\n\t\t\tthis.current.messages.push(\"\");\n\t\t\tthis.renderMessagePanel();\n\t\t});\n\t\ttrpanel.append(add_button);\n\t}\n}\n// == Initialize editor ==\n// Initialize editor, begin loading process and attach editor to window\nconst editor = new EventEditorClass();\neditor.init();\nwindow.editor = editor;\n\nADD_BUTTON.addEventListener(\"click\", () => {\n\teditor.create();\n});\n\nSAVED_INDICATOR.addEventListener(\"click\", () => {\n\teditor.save();\n});\n\n// =! Development Utilities =!\nfunction generateExamples() {\n\tlet names = [11, 22, 33, 44, 55, 66, 77, 88, 99];\n\tfor (let i = 0; i < names.length; i++) {\n\t\teditor.current = editor.generateEmptyParcel(names[i]);\n\t\teditor.current.messages[0] = `Message for ${names[i]}`;\n\t\teditor.current.action[0] = [\"resource:example\", names[i]];\n\t\teditor.save();\n\t}\n}\n// generateExamples();\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$2h5uG","$hYoLG","$dc74b086d590bec6$var$ADD_BUTTON","document","getElementById","$dc74b086d590bec6$var$RESOURCE_PANEL","$dc74b086d590bec6$var$RESOURCE_INFORMATION","$dc74b086d590bec6$var$SAVED_INDICATOR","$dc74b086d590bec6$var$EventEditorClass","BaseEditorClass","renderResourcePanel","updateSaveStatus","update","generateEmptyParcel","type","comment","messages","action","create","confirmChangestateSave","console","log","existingIds","events","map","elem","Number","split","newID","isNewID","includes","current","save","undefined","className","isSaved","isError","checkValidToSave","checkAllInputValidity","inputs","getElementsByTagName","i","reportValidity","regex_hash_number","test","warn","clearRender","innerHTML","length","button","createElement","addEventListener","load","renderResouceInformation","appendChild","tlpanel","trpanel","bpanel","generateTextInput","generateTextArea","messages_button","renderMessagePanel","actions_button","renderQuantityPanel","generateDeleteButton","generateQuantityPanel","notice","wrapper","input","value","delayedSave","inputDelete","splice","add_button","push","append","constructor","args","editorType","editorVersion","$dc74b086d590bec6$var$editor","window","editor"],"version":3,"file":"event.013fe0bc.js.map"}