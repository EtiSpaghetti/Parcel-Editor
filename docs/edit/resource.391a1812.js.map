{"mappings":"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","sources":["<anon>","source/TypeScript/resource_editor.ts","source/TypeScript/editor_base.ts","source/TypeScript/logging.ts","source/TypeScript/regexes.ts"],"sourcesContent":["const $e188284dcc7af615$export$bbdcf6cb8450a412 = \"7.1.2\";\n\n\n// ? regexID --> Contains only lowercase letters and underscores, cannot start or end with an underscore\nconst $bb7941350009d33a$export$13cabed84998b941 = new RegExp(\"^[a-z]([a-z_]*[a-z])?$\");\nconst $bb7941350009d33a$export$3cc283a187d82791 = new RegExp(\"^[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?$\");\nconst $bb7941350009d33a$export$19681d69a59327c9 = new RegExp(`^(resource|structure|research|unique|interaction|event)\\:(([a-z]([a-z_]*[a-z])?))$`);\n\n\nclass $f0a5947e9a01104b$export$5a86527663cb513c {\n    init() {\n        console.log(`Parcel Editor Version ${(0, $e188284dcc7af615$export$bbdcf6cb8450a412)} - Starting up.\\nLoading ${this.editorType} editor - Version ${this.editorVersion}`);\n        this.checkStorage();\n        this.logStorageCount();\n        this.logStorage();\n    }\n    update() {\n        this.checkStorage();\n    }\n    checkStorage() {\n        this.parcels = [];\n        for(let i = 0; i < localStorage.length; i++){\n            if (!(0, $bb7941350009d33a$export$19681d69a59327c9).test(localStorage.key(i))) continue;\n            this.parcels.push(localStorage.key(i));\n        }\n        this.sortStorage();\n    }\n    sortStorage() {\n        this.parcels.sort((a, b)=>a.localeCompare(b));\n        // Assign all \"resource:\" to this.resources\n        this.resources = this.parcels.filter((id)=>id.startsWith(\"resource:\"));\n        // Assign all \"structure:\" to this.structures\n        this.structures = this.parcels.filter((id)=>id.startsWith(\"structure:\"));\n        // Assign all \"research:\" to this.research\n        this.research = this.parcels.filter((id)=>id.startsWith(\"research:\"));\n        // Assign all \"unique:\" to this.unique\n        this.unique = this.parcels.filter((id)=>id.startsWith(\"unique:\"));\n        // Assign all \"interaction:\" to this.interactions\n        this.interactions = this.parcels.filter((id)=>id.startsWith(\"interaction:\"));\n        // Assign all \"event:\" to this.events\n        this.events = this.parcels.filter((id)=>id.startsWith(\"event:\"));\n    }\n    logStorage() {\n        console.table({\n            Resources: this.resources,\n            Structures: this.structures,\n            Research: this.research,\n            Unique: this.unique,\n            Interactions: this.interactions,\n            Events: this.events\n        });\n    }\n    logStorageCount() {\n        console.table({\n            Total: [\n                this.parcels.length\n            ],\n            Resources: [\n                this.resources.length\n            ],\n            Structures: [\n                this.structures.length\n            ],\n            Research: [\n                this.research.length\n            ],\n            Unique: [\n                this.unique.length\n            ],\n            Interactions: [\n                this.interactions.length\n            ],\n            Events: [\n                this.events.length\n            ]\n        });\n    }\n    save() {\n        if (!this.checkValidToSave()) {\n            console.warn(\"Parcel is not valid and cannot be saved\");\n            // Fail\n            return false;\n        }\n        // Get the full id\n        const fullId = `${this.editorType}:${this.current.id}`;\n        // Clear delayed saving\n        if (this.saveTimeout) clearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n        // Save it\n        localStorage.setItem(fullId, JSON.stringify(this.current));\n        // Update saved state and saved status\n        this.isSaved = true;\n        this.updateSaveStatus();\n        // Log saved\n        console.info(`Saved ${fullId}`);\n        // Success\n        return true;\n    }\n    checkValidToSave() {\n        if (this.current === undefined) {\n            console.warn(\"No parcel loaded, not saving\");\n            return false;\n        }\n        const fullId = `${this.editorType}:${this.current.id}`;\n        // Validate the full id\n        if (!(0, $bb7941350009d33a$export$19681d69a59327c9).test(fullId)) {\n            console.warn(`Given invalid full ID: ${fullId} to save`);\n            return false;\n        }\n        // All checks passed\n        return true;\n    }\n    delayedSave() {\n        this.isSaved = false; // Reset isSaved to false\n        if (this.saveTimeout) clearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n        this.saveTimeout = window.setTimeout(()=>{\n            this.save();\n        }, 5000);\n        this.updateSaveStatus();\n    }\n    confirmChangestateSave() {\n        if (this.current === undefined) // If there is nothing to save, we can continue\n        return true;\n        if (!this.save()) {\n            if (confirm(\"Unable to save, are you sure you would like to continue?\")) // Unable to save but continue anyway\n            return true;\n            else // Unable to save, not continuing\n            return false;\n        } else // Saved and can continue\n        return true;\n    }\n    load(full_id) {\n        if (!this.confirmChangestateSave()) // Has object loaded, isn't saved, and cannot be saved for some reason.\n        // User does not want to continue\n        return false;\n        // If the ID is invalid, don't load\n        if ((0, $bb7941350009d33a$export$19681d69a59327c9).test(full_id) === false) {\n            console.warn(`Given invalid full ID: ${full_id} to load`);\n            return false;\n        }\n        // If this is the wrong type of editor, don't load\n        if (full_id.startsWith(this.editorType) === false) {\n            console.warn(`Given wrong editor type: ${full_id} to load\\n Expected: ${this.editorType}`);\n            return false;\n        }\n        // Load it from storage into tempParcel\n        let tempParcel = JSON.parse(localStorage.getItem(full_id));\n        // If it doesn't exist, don't load\n        if (tempParcel === null) {\n            console.warn(`Given parcel doesn't exist: ${full_id} to load`);\n            return false;\n        }\n        let baseParcel = this.generateEmptyParcel(tempParcel.id, \"Undefined Name\");\n        Object.assign(baseParcel, tempParcel);\n        this.current = baseParcel;\n        return true;\n    }\n    delete(full_id) {\n        if ((0, $bb7941350009d33a$export$19681d69a59327c9).test(full_id) === false) {\n            console.warn(`Given invalid full ID: ${full_id} to delete`);\n            return false;\n        }\n        if (this.current !== undefined && `${this.current.type}:${this.current.id}` === full_id) {\n            this.current = undefined;\n            this.clearRender();\n        }\n        localStorage.removeItem(full_id);\n        console.log(`Deleted ${full_id}`);\n        this.update();\n        return true;\n    }\n    registerInvalid(full_id) {\n        if ((0, $bb7941350009d33a$export$19681d69a59327c9).test(full_id) === false) {\n            console.warn(`Given invalid full ID: ${full_id} to register as invalid`);\n            return false;\n        }\n        let knownInvalids = JSON.parse(localStorage.getItem(\"editor_knownInvalids\") || \"[]\");\n        knownInvalids.push([\n            full_id,\n            true\n        ]);\n        return true;\n    }\n    generateTextInput(property, property_name, properties = []) {\n        const wrapper = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.innerHTML = property_name;\n        const text = document.createElement(\"input\");\n        text.value = this.current[property];\n        text.addEventListener(\"input\", ()=>{\n            this.current[property] = text.value;\n            this.delayedSave();\n        });\n        // Special properties\n        if (properties.includes(\"spellcheck\")) text.spellcheck = true;\n        if (properties.includes(\"notEmpty\")) {\n            text.minLength = 1;\n            text.required = true;\n        }\n        if (properties.includes(\"readonly\")) text.readOnly = true;\n        if (properties.includes(\"regexId\")) text.pattern = \"[a-z]([a-z_]*[a-z])?\";\n        else if (properties.includes(\"regexName\")) text.pattern = \"[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?\";\n        wrapper.appendChild(label);\n        wrapper.appendChild(text);\n        return wrapper;\n    }\n    generateTextArea(property, property_name, properties = []) {\n        const wrapper = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.innerHTML = property_name;\n        const text = document.createElement(\"textarea\");\n        text.value = this.current[property];\n        text.rows = 4;\n        text.addEventListener(\"input\", ()=>{\n            this.current[property] = text.value;\n            this.delayedSave();\n        });\n        // Special properties\n        if (properties.includes(\"spellcheck\")) text.spellcheck = true;\n        if (properties.includes(\"notEmpty\")) {\n            text.minLength = 1;\n            text.required = true;\n        }\n        if (properties.includes(\"readonly\")) text.readOnly = true;\n        wrapper.appendChild(label);\n        wrapper.appendChild(text);\n        return wrapper;\n    }\n    generateNumberInput(property, property_name, properties = []) {\n        const wrapper = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.innerHTML = property_name;\n        const text = document.createElement(\"input\");\n        text.type = \"number\";\n        text.value = this.current[property];\n        text.addEventListener(\"input\", ()=>{\n            this.current[property] = Number(text.value);\n            this.delayedSave();\n        });\n        // Special properties\n        if (properties.includes(\"notNegative\")) text.min = \"0\";\n        else if (properties.includes(\"notZero\")) text.min = \"1\";\n        if (properties.includes(\"notEmpty\")) text.required = true;\n        wrapper.appendChild(label);\n        wrapper.appendChild(text);\n        return wrapper;\n    }\n    generateDeleteButton(full_id) {\n        const wrapper = document.createElement(\"div\");\n        wrapper.className = \"delete\";\n        const button = document.createElement(\"button\");\n        button.innerHTML = \"Delete\";\n        button.addEventListener(\"click\", ()=>{\n            this.delete(full_id);\n        });\n        wrapper.append(button);\n        return wrapper;\n    }\n    constructor(){\n        this.isSaved = true;\n        // List of all parcels information\n        this.parcels = [];\n        // List of each type of parcel\n        this.resources = [];\n        this.structures = [];\n        this.research = [];\n        this.unique = [];\n        // List of interactions and events\n        this.interactions = [];\n        this.events = [];\n    }\n}\n\n\n\n// Empty add id manager\nconst $105f85b172f0cde3$var$ADD_ID = document.getElementById(\"resource_add_id\");\nconst $105f85b172f0cde3$var$ADD_BUTTON = document.getElementById(\"resource_add_button\");\nconst $105f85b172f0cde3$var$RESOURCE_PANEL = document.getElementById(\"show_panel\");\nconst $105f85b172f0cde3$var$RESOURCE_INFORMATION = document.getElementById(\"resource_information\");\nconst $105f85b172f0cde3$var$SAVED_INDICATOR = document.getElementById(\"saved_indicator\");\n// == Register editor ==\nclass $105f85b172f0cde3$var$ResourceEditorClass extends (0, $f0a5947e9a01104b$export$5a86527663cb513c) {\n    init() {\n        super.init();\n        this.renderResourcePanel();\n        this.updateSaveStatus();\n    }\n    update() {\n        super.update();\n        this.renderResourcePanel();\n        this.updateSaveStatus();\n    }\n    generateEmptyParcel(id, name) {\n        return {\n            id: id,\n            type: \"resource\",\n            name: name,\n            description: \"\",\n            symbol: \"\",\n            minvalue: 0,\n            maxvalue: 0,\n            onUnlock: [],\n            onReach: []\n        };\n    }\n    create() {\n        if (!this.confirmChangestateSave()) {\n            console.log(\"Cannot create parcel, was unable to save currently loaded parcel\");\n            return false;\n        }\n        if (!(0, $bb7941350009d33a$export$13cabed84998b941).test($105f85b172f0cde3$var$ADD_ID.value)) {\n            alert(\"Invalid ID\");\n            return false;\n        }\n        this.current = this.generateEmptyParcel($105f85b172f0cde3$var$ADD_ID.value, $105f85b172f0cde3$var$ADD_ID.value.replace(\"_\", \" \"));\n        $105f85b172f0cde3$var$ADD_ID.value = \"\";\n        this.save();\n        console.log(`Created ${this.current.id}`);\n        this.update();\n        return true;\n    }\n    updateSaveStatus() {\n        if (this.isSaved) $105f85b172f0cde3$var$SAVED_INDICATOR.className = \"saved\";\n        else $105f85b172f0cde3$var$SAVED_INDICATOR.className = \"unsaved\";\n    }\n    checkValidToSave() {\n        if (!super.checkValidToSave()) return false;\n        if (!(0, $bb7941350009d33a$export$13cabed84998b941).test(this.current.id)) {\n            console.warn(`Given invalid ID: ${this.current.id} to save`);\n            return false;\n        }\n        if (!(0, $bb7941350009d33a$export$3cc283a187d82791).test(this.current.name)) {\n            console.warn(`Given invalid Name: ${this.current.name} to save`);\n            return false;\n        }\n        return true;\n    }\n    clearRender() {\n        $105f85b172f0cde3$var$RESOURCE_PANEL.innerHTML = \"\";\n        $105f85b172f0cde3$var$RESOURCE_INFORMATION.innerHTML = \"\";\n        this.renderResourcePanel();\n    }\n    renderResourcePanel() {\n        $105f85b172f0cde3$var$RESOURCE_PANEL.innerHTML = \"\";\n        for(let i = 0; i < this.resources.length; i++){\n            const button = document.createElement(\"button\");\n            button.innerHTML = this.resources[i];\n            button.addEventListener(\"click\", ()=>{\n                console.log(this.resources[i]);\n                this.load(this.resources[i]);\n                this.renderResouceInformation();\n            });\n            $105f85b172f0cde3$var$RESOURCE_PANEL.appendChild(button);\n        }\n    }\n    renderResouceInformation() {\n        // If this.current is undefined, return\n        if (this.current === undefined) {\n            console.warn(\"No resource loaded\");\n            return;\n        }\n        // Generate a set of inputs for the resource\n        $105f85b172f0cde3$var$RESOURCE_INFORMATION.innerHTML = \"\";\n        const tlpanel = document.createElement(\"div\");\n        tlpanel.id = \"tlpanel\";\n        const trpanel = document.createElement(\"div\");\n        trpanel.id = \"trpanel\";\n        const bpanel = document.createElement(\"div\");\n        bpanel.id = \"bpanel\";\n        // ID\n        tlpanel.appendChild(this.generateTextInput(\"id\", \"ID\", [\n            \"notEmpty\",\n            \"regexId\",\n            \"readonly\"\n        ]));\n        // Name\n        tlpanel.appendChild(this.generateTextInput(\"name\", \"Name\", [\n            \"spellcheck\",\n            \"notEmpty\",\n            \"regexName\"\n        ]));\n        // Symbol\n        tlpanel.appendChild(this.generateTextInput(\"symbol\", \"Symbol\"));\n        // Description\n        tlpanel.appendChild(this.generateTextArea(\"description\", \"Description\", [\n            \"spellcheck\"\n        ]));\n        // Min Value\n        tlpanel.appendChild(this.generateNumberInput(\"minvalue\", \"Min Value\", [\n            \"notEmpty\"\n        ]));\n        // Max Value\n        tlpanel.appendChild(this.generateNumberInput(\"maxvalue\", \"Max Value\", [\n            \"notEmpty\"\n        ]));\n        // On Unlock\n        // On Reach\n        // Delete button\n        bpanel.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`));\n        $105f85b172f0cde3$var$RESOURCE_INFORMATION.appendChild(tlpanel);\n        $105f85b172f0cde3$var$RESOURCE_INFORMATION.appendChild(trpanel);\n        $105f85b172f0cde3$var$RESOURCE_INFORMATION.appendChild(bpanel);\n    }\n    constructor(...args){\n        super(...args);\n        this.editorType = \"resource\";\n        this.editorVersion = 1;\n    }\n}\n// == Initialize editor ==\n// Initialize editor, begin loading process and attach editor to window\nconst $105f85b172f0cde3$var$editor = new $105f85b172f0cde3$var$ResourceEditorClass();\n$105f85b172f0cde3$var$editor.init();\nwindow.editor = $105f85b172f0cde3$var$editor;\n$105f85b172f0cde3$var$ADD_ID.addEventListener(\"input\", ()=>{\n    if ($105f85b172f0cde3$var$ADD_ID.value === \"\") $105f85b172f0cde3$var$ADD_ID.classList.add(\"empty\");\n    else $105f85b172f0cde3$var$ADD_ID.classList.remove(\"empty\");\n});\n$105f85b172f0cde3$var$ADD_BUTTON.addEventListener(\"click\", ()=>{\n    $105f85b172f0cde3$var$editor.create();\n});\n$105f85b172f0cde3$var$SAVED_INDICATOR.addEventListener(\"click\", ()=>{\n    $105f85b172f0cde3$var$editor.save();\n});\n// =! Development Utilities =!\nfunction $105f85b172f0cde3$var$generateExamples() {\n    let names = [\n        \"ore_iron\",\n        \"ore_copper\",\n        \"ore_gold\",\n        \"ingot_iron\",\n        \"ingot_copper\",\n        \"ingot_gold\"\n    ];\n    for(let i = 0; i < names.length; i++){\n        $105f85b172f0cde3$var$editor.current = $105f85b172f0cde3$var$editor.generateEmptyParcel(`example_${names[i]}`, names[i].replace(\"_\", \" \"));\n        $105f85b172f0cde3$var$editor.save();\n    }\n} // generateExamples();\n\n\n//# sourceMappingURL=resource.391a1812.js.map\n","import { BaseEditorClass, inputProperties } from \"./editor_base\";\nimport { resource_interface } from \"./parcel_interfaces\";\nimport { regex_id, regex_id_full, regex_name } from \"./regexes\";\n\n// Empty add id manager\nconst ADD_ID = document.getElementById(\"resource_add_id\") as HTMLInputElement;\nconst ADD_BUTTON = document.getElementById(\"resource_add_button\") as HTMLButtonElement;\n\nconst RESOURCE_PANEL = document.getElementById(\"show_panel\") as HTMLDivElement;\nconst RESOURCE_INFORMATION = document.getElementById(\"resource_information\") as HTMLDivElement;\nconst SAVED_INDICATOR = document.getElementById(\"saved_indicator\") as HTMLDivElement;\n\n// == Register editor ==\nclass ResourceEditorClass extends BaseEditorClass {\n\tpublic editorType: \"resource\" = \"resource\";\n\tpublic editorVersion: number = 1;\n\n\tpublic current: resource_interface;\n\n\tinit() {\n\t\tsuper.init();\n\t\tthis.renderResourcePanel();\n\t\tthis.updateSaveStatus();\n\t}\n\n\tupdate() {\n\t\tsuper.update();\n\t\tthis.renderResourcePanel();\n\t\tthis.updateSaveStatus();\n\t}\n\n\tgenerateEmptyParcel(id: string, name: string): resource_interface {\n\t\treturn {\n\t\t\tid: id,\n\t\t\ttype: \"resource\",\n\t\t\tname: name,\n\t\t\tdescription: \"\",\n\t\t\tsymbol: \"\",\n\t\t\tminvalue: 0,\n\t\t\tmaxvalue: 0,\n\t\t\tonUnlock: [],\n\t\t\tonReach: [],\n\t\t};\n\t}\n\n\tcreate(): boolean {\n\t\tif (!this.confirmChangestateSave()) {\n\t\t\tconsole.log(\"Cannot create parcel, was unable to save currently loaded parcel\");\n\t\t\treturn false;\n\t\t}\n\t\tif (!regex_id.test(ADD_ID.value)) {\n\t\t\talert(\"Invalid ID\");\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.current = this.generateEmptyParcel(ADD_ID.value, ADD_ID.value.replace(\"_\", \" \"));\n\t\tADD_ID.value = \"\";\n\t\tthis.save();\n\t\tconsole.log(`Created ${this.current.id}`);\n\n\t\tthis.update();\n\n\t\treturn true;\n\t}\n\n\tupdateSaveStatus(): void {\n\t\tif (this.isSaved) {\n\t\t\tSAVED_INDICATOR.className = \"saved\";\n\t\t} else {\n\t\t\tSAVED_INDICATOR.className = \"unsaved\";\n\t\t}\n\t}\n\n\tcheckValidToSave(): boolean {\n\t\tif (!super.checkValidToSave()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!regex_id.test(this.current.id)) {\n\t\t\tconsole.warn(`Given invalid ID: ${this.current.id} to save`);\n\t\t\treturn false;\n\t\t}\n\t\tif (!regex_name.test(this.current.name)) {\n\t\t\tconsole.warn(`Given invalid Name: ${this.current.name} to save`);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tclearRender() {\n\t\tRESOURCE_PANEL.innerHTML = \"\";\n\t\tRESOURCE_INFORMATION.innerHTML = \"\";\n\t\tthis.renderResourcePanel();\n\t}\n\n\trenderResourcePanel() {\n\t\tRESOURCE_PANEL.innerHTML = \"\";\n\t\tfor (let i = 0; i < this.resources.length; i++) {\n\t\t\tconst button = document.createElement(\"button\");\n\t\t\tbutton.innerHTML = this.resources[i];\n\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\tconsole.log(this.resources[i]);\n\t\t\t\tthis.load(this.resources[i]);\n\t\t\t\tthis.renderResouceInformation();\n\t\t\t});\n\t\t\tRESOURCE_PANEL.appendChild(button);\n\t\t}\n\t}\n\n\trenderResouceInformation() {\n\t\t// If this.current is undefined, return\n\t\tif (this.current === undefined) {\n\t\t\tconsole.warn(\"No resource loaded\");\n\t\t\treturn;\n\t\t}\n\t\t// Generate a set of inputs for the resource\n\t\tRESOURCE_INFORMATION.innerHTML = \"\";\n\n\t\tconst tlpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\ttlpanel.id = \"tlpanel\";\n\t\tconst trpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\ttrpanel.id = \"trpanel\";\n\t\tconst bpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\tbpanel.id = \"bpanel\";\n\n\t\t// ID\n\t\ttlpanel.appendChild(this.generateTextInput(\"id\", \"ID\", [\"notEmpty\", \"regexId\", \"readonly\"]));\n\t\t// Name\n\t\ttlpanel.appendChild(this.generateTextInput(\"name\", \"Name\", [\"spellcheck\", \"notEmpty\", \"regexName\"]));\n\t\t// Symbol\n\t\ttlpanel.appendChild(this.generateTextInput(\"symbol\", \"Symbol\"));\n\t\t// Description\n\t\ttlpanel.appendChild(this.generateTextArea(\"description\", \"Description\", [\"spellcheck\"]));\n\t\t// Min Value\n\t\ttlpanel.appendChild(this.generateNumberInput(\"minvalue\", \"Min Value\", [\"notEmpty\"]));\n\t\t// Max Value\n\t\ttlpanel.appendChild(this.generateNumberInput(\"maxvalue\", \"Max Value\", [\"notEmpty\"]));\n\t\t// On Unlock\n\t\t// On Reach\n\t\t// Delete button\n\t\tbpanel.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`));\n\n\t\tRESOURCE_INFORMATION.appendChild(tlpanel);\n\t\tRESOURCE_INFORMATION.appendChild(trpanel);\n\t\tRESOURCE_INFORMATION.appendChild(bpanel);\n\t}\n}\n// == Initialize editor ==\n// Initialize editor, begin loading process and attach editor to window\nconst editor = new ResourceEditorClass();\neditor.init();\nwindow.editor = editor;\n\nADD_ID.addEventListener(\"input\", () => {\n\tif (ADD_ID.value === \"\") {\n\t\tADD_ID.classList.add(\"empty\");\n\t} else {\n\t\tADD_ID.classList.remove(\"empty\");\n\t}\n});\nADD_BUTTON.addEventListener(\"click\", () => {\n\teditor.create();\n});\n\nSAVED_INDICATOR.addEventListener(\"click\", () => {\n\teditor.save();\n});\n\n// =! Development Utilities =!\nfunction generateExamples() {\n\tlet names = [\"ore_iron\", \"ore_copper\", \"ore_gold\", \"ingot_iron\", \"ingot_copper\", \"ingot_gold\"];\n\tfor (let i = 0; i < names.length; i++) {\n\t\teditor.current = editor.generateEmptyParcel(`example_${names[i]}`, names[i].replace(\"_\", \" \"));\n\t\teditor.save();\n\t}\n}\n// generateExamples();\n","import { editor_version } from \"./logging\";\nimport { resource_interface, structure_interface, research_interface, unique_interface, interaction_interface } from \"./parcel_interfaces\";\nimport { regex_id_full } from \"./regexes\";\nimport { full_id, id, invalid_register } from \"./types\";\n\nexport type inputProperties = \"spellcheck\" | \"notEmpty\" | \"readonly\" | \"regexId\" | \"regexName\" | \"notZero\" | \"notNegative\";\n\nexport abstract class BaseEditorClass {\n\tabstract editorType: \"resource\" | \"structure\" | \"research\" | \"unique\" | \"interaction\" | \"event\"; // Type of object this editor edits\n\tabstract editorVersion: number; // Version of this specific editor\n\tprivate saveTimeout: number | undefined;\n\tpublic isSaved: boolean = true;\n\n\t// The object currently loaded in the editor. Each editor chooses a single type to edit\n\tpublic current: resource_interface | structure_interface | research_interface | unique_interface | interaction_interface | undefined;\n\n\t// List of all parcels information\n\tpublic parcels: full_id[] = [];\n\t// List of each type of parcel\n\tpublic resources: full_id[] = [];\n\tpublic structures: full_id[] = [];\n\tpublic research: full_id[] = [];\n\tpublic unique: full_id[] = [];\n\n\t// List of interactions and events\n\tpublic interactions: full_id[] = [];\n\tpublic events: full_id[] = [];\n\n\tinit() {\n\t\tconsole.log(\n\t\t\t`Parcel Editor Version ${editor_version} - Starting up.\\nLoading ${this.editorType} editor - Version ${this.editorVersion}`\n\t\t);\n\t\tthis.checkStorage();\n\t\tthis.logStorageCount();\n\t\tthis.logStorage();\n\t}\n\n\tupdate() {\n\t\tthis.checkStorage();\n\t}\n\n\tcheckStorage() {\n\t\tthis.parcels = [];\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tif (!regex_id_full.test(localStorage.key(i) as string)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.parcels.push(localStorage.key(i) as full_id);\n\t\t}\n\t\tthis.sortStorage();\n\t}\n\tprivate sortStorage(): void {\n\t\tthis.parcels.sort((a, b) => a.localeCompare(b));\n\t\t// Assign all \"resource:\" to this.resources\n\t\tthis.resources = this.parcels.filter((id) => id.startsWith(\"resource:\"));\n\t\t// Assign all \"structure:\" to this.structures\n\t\tthis.structures = this.parcels.filter((id) => id.startsWith(\"structure:\"));\n\t\t// Assign all \"research:\" to this.research\n\t\tthis.research = this.parcels.filter((id) => id.startsWith(\"research:\"));\n\t\t// Assign all \"unique:\" to this.unique\n\t\tthis.unique = this.parcels.filter((id) => id.startsWith(\"unique:\"));\n\t\t// Assign all \"interaction:\" to this.interactions\n\t\tthis.interactions = this.parcels.filter((id) => id.startsWith(\"interaction:\"));\n\t\t// Assign all \"event:\" to this.events\n\t\tthis.events = this.parcels.filter((id) => id.startsWith(\"event:\"));\n\t}\n\tlogStorage() {\n\t\tconsole.table({\n\t\t\tResources: this.resources,\n\t\t\tStructures: this.structures,\n\t\t\tResearch: this.research,\n\t\t\tUnique: this.unique,\n\t\t\tInteractions: this.interactions,\n\t\t\tEvents: this.events,\n\t\t});\n\t}\n\tlogStorageCount() {\n\t\tconsole.table({\n\t\t\tTotal: [this.parcels.length],\n\t\t\tResources: [this.resources.length],\n\t\t\tStructures: [this.structures.length],\n\t\t\tResearch: [this.research.length],\n\t\t\tUnique: [this.unique.length],\n\t\t\tInteractions: [this.interactions.length],\n\t\t\tEvents: [this.events.length],\n\t\t});\n\t}\n\tsave() {\n\t\tif (!this.checkValidToSave()) {\n\t\t\tconsole.warn(\"Parcel is not valid and cannot be saved\");\n\t\t\t// Fail\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get the full id\n\t\tconst fullId = `${this.editorType}:${this.current!.id}`;\n\t\t// Clear delayed saving\n\t\tif (this.saveTimeout) {\n\t\t\tclearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n\t\t}\n\t\t// Save it\n\t\tlocalStorage.setItem(fullId, JSON.stringify(this.current));\n\t\t// Update saved state and saved status\n\t\tthis.isSaved = true;\n\t\tthis.updateSaveStatus();\n\t\t// Log saved\n\t\tconsole.info(`Saved ${fullId}`);\n\t\t// Success\n\t\treturn true;\n\t}\n\tcheckValidToSave(): boolean {\n\t\tif (this.current === undefined) {\n\t\t\tconsole.warn(\"No parcel loaded, not saving\");\n\t\t\treturn false;\n\t\t}\n\t\tconst fullId = `${this.editorType}:${this.current.id}`;\n\t\t// Validate the full id\n\t\tif (!regex_id_full.test(fullId)) {\n\t\t\tconsole.warn(`Given invalid full ID: ${fullId} to save`);\n\t\t\treturn false;\n\t\t}\n\t\t// All checks passed\n\t\treturn true;\n\t}\n\tdelayedSave() {\n\t\tthis.isSaved = false; // Reset isSaved to false\n\t\tif (this.saveTimeout) {\n\t\t\tclearTimeout(this.saveTimeout); // Clear the previous timeout if it exists\n\t\t}\n\t\tthis.saveTimeout = window.setTimeout(() => {\n\t\t\tthis.save();\n\t\t}, 5000);\n\t\tthis.updateSaveStatus();\n\t}\n\tabstract updateSaveStatus(): void;\n\n\tconfirmChangestateSave(): boolean {\n\t\tif (this.current === undefined) {\n\t\t\t// If there is nothing to save, we can continue\n\t\t\treturn true;\n\t\t}\n\t\tif (!this.save()) {\n\t\t\tif (confirm(\"Unable to save, are you sure you would like to continue?\")) {\n\t\t\t\t// Unable to save but continue anyway\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t// Unable to save, not continuing\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\t// Saved and can continue\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tload(full_id: full_id): boolean {\n\t\tif (!this.confirmChangestateSave()) {\n\t\t\t// Has object loaded, isn't saved, and cannot be saved for some reason.\n\t\t\t// User does not want to continue\n\t\t\treturn false;\n\t\t}\n\t\t// If the ID is invalid, don't load\n\t\tif (regex_id_full.test(full_id) === false) {\n\t\t\tconsole.warn(`Given invalid full ID: ${full_id} to load`);\n\t\t\treturn false;\n\t\t}\n\t\t// If this is the wrong type of editor, don't load\n\t\tif (full_id.startsWith(this.editorType) === false) {\n\t\t\tconsole.warn(`Given wrong editor type: ${full_id} to load\\n Expected: ${this.editorType}`);\n\t\t\treturn false;\n\t\t}\n\t\t// Load it from storage into tempParcel\n\t\tlet tempParcel = JSON.parse(localStorage.getItem(full_id) as string);\n\n\t\t// If it doesn't exist, don't load\n\t\tif (tempParcel === null) {\n\t\t\tconsole.warn(`Given parcel doesn't exist: ${full_id} to load`);\n\t\t\treturn false;\n\t\t}\n\n\t\tlet baseParcel = this.generateEmptyParcel(tempParcel.id, \"Undefined Name\");\n\t\tObject.assign(baseParcel, tempParcel);\n\n\t\tthis.current = baseParcel;\n\n\t\treturn true;\n\t}\n\n\tabstract generateEmptyParcel(\n\t\tid: id,\n\t\tname: string\n\t): resource_interface | structure_interface | research_interface | unique_interface | interaction_interface;\n\n\tabstract create();\n\n\tdelete(full_id) {\n\t\tif (regex_id_full.test(full_id) === false) {\n\t\t\tconsole.warn(`Given invalid full ID: ${full_id} to delete`);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.current !== undefined && `${this.current.type}:${this.current.id}` === full_id) {\n\t\t\t\tthis.current = undefined;\n\t\t\t\tthis.clearRender();\n\t\t}\n\t\tlocalStorage.removeItem(full_id);\n\t\tconsole.log(`Deleted ${full_id}`);\n\t\tthis.update();\n\t\treturn true;\n\t}\n\n\tabstract clearRender();\n\n\tregisterInvalid(full_id) {\n\t\tif (regex_id_full.test(full_id) === false) {\n\t\t\tconsole.warn(`Given invalid full ID: ${full_id} to register as invalid`);\n\t\t\treturn false;\n\t\t}\n\t\tlet knownInvalids: invalid_register[] = JSON.parse(localStorage.getItem(\"editor_knownInvalids\") || \"[]\") as invalid_register[];\n\t\tknownInvalids.push([full_id, true]);\n\t\treturn true;\n\t}\n\n\tpublic generateTextInput(property: string, property_name: string, properties: inputProperties[] = []): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.innerHTML = property_name;\n\n\t\tconst text = document.createElement(\"input\");\n\t\ttext.value = this.current![property];\n\t\ttext.addEventListener(\"input\", () => {\n\t\t\tthis.current![property] = text.value;\n\t\t\tthis.delayedSave();\n\t\t});\n\n\t\t// Special properties\n\t\tif (properties.includes(\"spellcheck\")) {\n\t\t\ttext.spellcheck = true;\n\t\t}\n\t\tif (properties.includes(\"notEmpty\")) {\n\t\t\ttext.minLength = 1;\n\t\t\ttext.required = true;\n\t\t}\n\t\tif (properties.includes(\"readonly\")) {\n\t\t\ttext.readOnly = true;\n\t\t}\n\t\tif (properties.includes(\"regexId\")) {\n\t\t\ttext.pattern = \"[a-z]([a-z_]*[a-z])?\";\n\t\t} else if (properties.includes(\"regexName\")) {\n\t\t\ttext.pattern = \"[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?\";\n\t\t}\n\n\t\twrapper.appendChild(label);\n\t\twrapper.appendChild(text);\n\n\t\treturn wrapper;\n\t}\n\tpublic generateTextArea(property: string, property_name: string, properties: inputProperties[] = []): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.innerHTML = property_name;\n\n\t\tconst text = document.createElement(\"textarea\");\n\t\ttext.value = this.current![property];\n\t\ttext.rows = 4;\n\t\ttext.addEventListener(\"input\", () => {\n\t\t\tthis.current![property] = text.value;\n\t\t\tthis.delayedSave();\n\t\t});\n\n\t\t// Special properties\n\t\tif (properties.includes(\"spellcheck\")) {\n\t\t\ttext.spellcheck = true;\n\t\t}\n\t\tif (properties.includes(\"notEmpty\")) {\n\t\t\ttext.minLength = 1;\n\t\t\ttext.required = true;\n\t\t}\n\t\tif (properties.includes(\"readonly\")) {\n\t\t\ttext.readOnly = true;\n\t\t}\n\n\t\twrapper.appendChild(label);\n\t\twrapper.appendChild(text);\n\n\t\treturn wrapper;\n\t}\n\tpublic generateNumberInput(property: string, property_name: string, properties: inputProperties[] = []): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\n\t\tconst label = document.createElement(\"label\");\n\t\tlabel.innerHTML = property_name;\n\n\t\tconst text = document.createElement(\"input\");\n\t\ttext.type = \"number\";\n\t\ttext.value = this.current![property];\n\t\ttext.addEventListener(\"input\", () => {\n\t\t\tthis.current![property] = Number(text.value);\n\t\t\tthis.delayedSave();\n\t\t});\n\n\t\t// Special properties\n\t\tif (properties.includes(\"notNegative\")) {\n\t\t\ttext.min = \"0\";\n\t\t} else if (properties.includes(\"notZero\")) {\n\t\t\ttext.min = \"1\";\n\t\t}\n\t\tif (properties.includes(\"notEmpty\")) {\n\t\t\ttext.required = true;\n\t\t}\n\n\t\twrapper.appendChild(label);\n\t\twrapper.appendChild(text);\n\n\t\treturn wrapper;\n\t}\n\tpublic generateDeleteButton(full_id: full_id): HTMLDivElement {\n\t\tconst wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"delete\";\n\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.innerHTML = \"Delete\";\n\t\tbutton.addEventListener(\"click\", () => {\n\t\t\tthis.delete(full_id);\n\t\t});\n\n\t\twrapper.append(button);\n\t\treturn wrapper;\n\t}\n}\n\ndeclare global {\n\tinterface Window {\n\t\teditor: BaseEditorClass;\n\t}\n}","export const editor_version = \"7.1.2\";\n","// ? regexID --> Contains only lowercase letters and underscores, cannot start or end with an underscore\nexport const regex_id = new RegExp(\"^[a-z]([a-z_]*[a-z])?$\");\n// ? regexName --> Contains only letters and spaces, cannot start or end with a space\nexport const regex_name = new RegExp(\"^[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?$\");\n// ? regexFullID --> starts with a valid type, then a colon : then a valid regexID\nexport const regex_id_full = new RegExp(`^(resource|structure|research|unique|interaction|event)\\:(([a-z]([a-z_]*[a-z])?))$`);\n"],"names":["$bb7941350009d33a$export$13cabed84998b941","RegExp","$bb7941350009d33a$export$3cc283a187d82791","$bb7941350009d33a$export$19681d69a59327c9","$f0a5947e9a01104b$export$5a86527663cb513c","init","console","log","editorType","editorVersion","checkStorage","logStorageCount","logStorage","update","parcels","i","localStorage","length","test","key","push","sortStorage","sort","a","b","localeCompare","resources","filter","id","startsWith","structures","research","unique","interactions","events","table","Resources","Structures","Research","Unique","Interactions","Events","Total","save","checkValidToSave","warn","fullId","current","saveTimeout","clearTimeout","setItem","JSON","stringify","isSaved","updateSaveStatus","info","undefined","delayedSave","window","setTimeout","confirmChangestateSave","confirm","load","full_id","tempParcel","parse","getItem","baseParcel","generateEmptyParcel","Object","assign","delete","type","clearRender","removeItem","registerInvalid","knownInvalids","generateTextInput","property","property_name","properties","wrapper","document","createElement","label","innerHTML","text","value","addEventListener","includes","spellcheck","minLength","required","readOnly","pattern","appendChild","generateTextArea","rows","generateNumberInput","Number","min","generateDeleteButton","className","button","append","constructor","$105f85b172f0cde3$var$ADD_ID","getElementById","$105f85b172f0cde3$var$ADD_BUTTON","$105f85b172f0cde3$var$RESOURCE_PANEL","$105f85b172f0cde3$var$RESOURCE_INFORMATION","$105f85b172f0cde3$var$SAVED_INDICATOR","$105f85b172f0cde3$var$editor","renderResourcePanel","name","description","symbol","minvalue","maxvalue","onUnlock","onReach","create","replace","alert","renderResouceInformation","tlpanel","trpanel","bpanel","args","editor","classList","add","remove"],"version":3,"file":"resource.391a1812.js.map"}