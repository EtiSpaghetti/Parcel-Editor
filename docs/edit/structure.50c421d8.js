var e=globalThis,t={},n={},r=e.parcelRequirea313;null==r&&((r=function(e){if(e in t)return t[e].exports;if(e in n){var r=n[e];delete n[e];var a={id:e,exports:{}};return t[e]=a,r.call(a.exports,a,a.exports),a.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){n[e]=t},e.parcelRequirea313=r),r.register;var a=r("2h5uG"),i=r("hYoLG");const s=document.getElementById("resource_add_id"),d=document.getElementById("resource_add_button"),l=document.getElementById("show_panel"),c=document.getElementById("resource_information"),o=document.getElementById("saved_indicator");class u extends a.BaseEditorClass{init(){super.init(),this.renderResourcePanel(),this.updateSaveStatus()}update(){super.update(),this.renderResourcePanel(),this.updateSaveStatus()}generateEmptyParcel(e,t){return{id:e,type:"structure",name:t,description:"",symbol:"",passive:0,additives:[],multipliers:[],onUnlock:[],onReach:[]}}create(){return this.confirmChangestateSave()?(0,i.regex_id).test(s.value)?(this.current=this.generateEmptyParcel(s.value,s.value.replace("_"," ")),s.value="",this.save(),console.log(`Created ${this.current.id}`),this.update(),!0):(alert("Invalid ID"),!1):(console.log("Cannot create parcel, was unable to save currently loaded parcel"),!1)}updateSaveStatus(){if(void 0===this.current){o.className="undefined";return}if(this.isSaved){o.className="saved";return}if(!this.isError&&this.checkValidToSave()){o.className="unsaved";return}o.className="error"}checkAllInputValidity(){let e=c.getElementsByTagName("input");for(let t in e)if(e[t].reportValidity&&!e[t].reportValidity())return!1;return!0}checkValidToSave(){return!!super.checkValidToSave()&&((0,i.regex_id).test(this.current.id)?!!(0,i.regex_name).test(this.current.name)||(console.warn(`Given invalid Name: ${this.current.name} to save`),this.isError=!0,this.updateSaveStatus(),!1):(console.warn(`Given invalid ID: ${this.current.id} to save`),this.isError=!0,this.updateSaveStatus(),!1))}clearRender(){l.innerHTML="",c.innerHTML="",this.renderResourcePanel()}renderResourcePanel(){l.innerHTML="";for(let e=0;e<this.structures.length;e++){let t=document.createElement("button");t.innerHTML=this.structures[e],t.addEventListener("click",()=>{console.log(`Loaded : ${this.structures[e]}`),this.load(this.structures[e]),this.renderResouceInformation()}),l.appendChild(t)}}renderResouceInformation(){if(void 0===this.current){console.warn("No structure loaded");return}c.innerHTML="";let e=document.createElement("div");e.id="tlpanel";let t=document.createElement("div");t.id="trpanel";let n=document.createElement("div");n.id="bpanel",e.appendChild(this.generateTextInput("id","ID",["notEmpty","regexId","readonly"])),e.appendChild(this.generateTextInput("name","Name",["spellcheck","notEmpty","regexName"])),e.appendChild(this.generateTextInput("symbol","Symbol")),e.appendChild(this.generateTextArea("description","Description",["spellcheck"])),e.appendChild(this.generateNumberInput("passive","Passive",["notNegative"]));let r=document.createElement("button");r.innerHTML="Additive charges",r.addEventListener("click",()=>{this.generateChargesPanel(t,"additives")}),e.append(r);let a=document.createElement("button");a.innerHTML="Multiplicative charges",a.addEventListener("click",()=>{this.generateChargesPanel(t,"multipliers")}),e.append(a);let i=document.createElement("button");i.innerHTML="onUnlock Events",i.addEventListener("click",()=>{this.generateOnUnlock(t)}),e.append(i);let s=document.createElement("button");s.innerHTML="onReach Events",s.addEventListener("click",()=>{this.generateOnReach(t)}),e.append(s),n.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`)),c.appendChild(e),c.appendChild(t),c.appendChild(n)}generateChargesPanel(e,t){if(e.innerHTML="",e.className="chargeWrapper doubles",console.log("Rendering charges wrapper"),0==this.current[t].length){let n=document.createElement("h2");n.innerHTML=`No ${t}`,e.appendChild(n)}for(let n in this.current[t]){let r=document.createElement("div"),a=document.createElement("button");a.innerHTML=`Charge ${n}`,a.addEventListener("click",()=>{this.generateChargeEditingPanel(e,this.current[t][n])}),r.append(a);let i=document.createElement("button");i.innerHTML="X",i.addEventListener("click",()=>{this.current[t].splice(Number(n),1),this.delayedSave(),this.generateChargesPanel(e,t)}),r.append(i),e.append(r)}let n=document.createElement("button");n.className="add",n.innerHTML="Add new onReach event",n.addEventListener("click",()=>{this.current[t].push([[],0]),this.delayedSave(),this.generateChargesPanel(e,t)}),e.append(n)}generateChargeEditingPanel(e,t){console.log("Editing a charge . . .")}constructor(...e){super(...e),this.editorType="structure",this.editorVersion=1}}const p=new u;p.init(),window.editor=p,s.addEventListener("input",()=>{""===s.value?s.classList.add("empty"):s.classList.remove("empty")}),d.addEventListener("click",()=>{p.create()}),o.addEventListener("click",()=>{p.save()}),document.getElementById("export_current").addEventListener("click",()=>{p.saveExportData("current")});
//# sourceMappingURL=structure.50c421d8.js.map
