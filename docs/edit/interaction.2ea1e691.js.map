{"mappings":"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","sources":["<anon>","source/TypeScript/interaction_editor.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirea313\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirea313\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $2h5uG = parcelRequire(\"2h5uG\");\n\nvar $hYoLG = parcelRequire(\"hYoLG\");\n// Empty add id manager\nconst $311ddb60260d5d1c$var$ADD_BUTTON = document.getElementById(\"add_event\");\nconst $311ddb60260d5d1c$var$RESOURCE_PANEL = document.getElementById(\"show_panel\");\nconst $311ddb60260d5d1c$var$RESOURCE_INFORMATION = document.getElementById(\"resource_information\");\nconst $311ddb60260d5d1c$var$SAVED_INDICATOR = document.getElementById(\"saved_indicator\");\n// == Register editor ==\nclass $311ddb60260d5d1c$var$InteractionEditorClass extends (0, $2h5uG.BaseEditorClass) {\n    init() {\n        super.init();\n        this.renderResourcePanel();\n        this.updateSaveStatus();\n    }\n    update() {\n        super.update();\n        this.renderResourcePanel();\n        this.updateSaveStatus();\n    }\n    generateEmptyParcel(id) {\n        return {\n            id: `#${id}`,\n            type: \"interaction\",\n            comment: \"\",\n            result: [],\n            requires: [],\n            consumes: []\n        };\n    }\n    create() {\n        if (!this.confirmChangestateSave()) {\n            console.log(\"Cannot create parcel, was unable to save currently loaded parcel\");\n            return false;\n        }\n        // Get a list of ids from this.interactions\n        const existingIds = this.interactions.map((elem)=>Number(elem.split(\"#\")[1]));\n        // New id is an ID that is not currently in use\n        let newID = 1;\n        let isNewID = false;\n        while(!isNewID)if (existingIds.includes(newID)) newID++;\n        else isNewID = true;\n        this.current = this.generateEmptyParcel(newID);\n        this.save();\n        console.log(`Created ${this.current.id}`);\n        this.update();\n        return true;\n    }\n    updateSaveStatus() {\n        if (this.current === undefined) {\n            $311ddb60260d5d1c$var$SAVED_INDICATOR.className = \"undefined\";\n            return;\n        } else if (this.isSaved) {\n            $311ddb60260d5d1c$var$SAVED_INDICATOR.className = \"saved\";\n            return;\n        } else if (!this.isError && this.checkValidToSave()) {\n            $311ddb60260d5d1c$var$SAVED_INDICATOR.className = \"unsaved\";\n            return;\n        } else {\n            $311ddb60260d5d1c$var$SAVED_INDICATOR.className = \"error\";\n            return;\n        }\n    }\n    checkAllInputValidity() {\n        const inputs = $311ddb60260d5d1c$var$RESOURCE_INFORMATION.getElementsByTagName(\"input\");\n        for(const i in inputs){\n            if (inputs[i].reportValidity && !inputs[i].reportValidity()) return false;\n        }\n        return true;\n    }\n    checkValidToSave() {\n        if (!super.checkValidToSave()) return false;\n        if (!(0, $hYoLG.regex_hash_number).test(this.current.id)) {\n            console.warn(`Given invalid ID: ${this.current.id} to save`);\n            this.isError = true;\n            this.updateSaveStatus();\n            return false;\n        }\n        return true;\n    }\n    clearRender() {\n        $311ddb60260d5d1c$var$RESOURCE_PANEL.innerHTML = \"\";\n        $311ddb60260d5d1c$var$RESOURCE_INFORMATION.innerHTML = \"\";\n        this.renderResourcePanel();\n    }\n    renderResourcePanel() {\n        $311ddb60260d5d1c$var$RESOURCE_PANEL.innerHTML = \"\";\n        for(let i = 0; i < this.interactions.length; i++){\n            const button = document.createElement(\"button\");\n            button.innerHTML = this.interactions[i];\n            button.addEventListener(\"click\", ()=>{\n                console.log(`Loaded : ${this.interactions[i]}`);\n                this.load(this.interactions[i]);\n                this.renderResouceInformation();\n                this.updateSaveStatus();\n            });\n            $311ddb60260d5d1c$var$RESOURCE_PANEL.appendChild(button);\n        }\n    }\n    renderResouceInformation() {\n        // If this.current is undefined, return\n        if (this.current === undefined) {\n            console.warn(\"No resource loaded\");\n            return;\n        }\n        // Generate a set of inputs for the resource\n        $311ddb60260d5d1c$var$RESOURCE_INFORMATION.innerHTML = \"\";\n        const tlpanel = document.createElement(\"div\");\n        tlpanel.id = \"tlpanel\";\n        const trpanel = document.createElement(\"div\");\n        trpanel.id = \"trpanel\";\n        const bpanel = document.createElement(\"div\");\n        bpanel.id = \"bpanel\";\n        // ID\n        tlpanel.appendChild(this.generateTextInput(\"id\", \"ID\", [\n            \"notEmpty\",\n            \"readonly\"\n        ]));\n        // Comment\n        tlpanel.appendChild(this.generateTextArea(\"comment\", \"Comment\", [\n            \"spellcheck\"\n        ]));\n        // Result (add/remove resources)\n        const result_button = document.createElement(\"button\");\n        result_button.innerHTML = \"result\";\n        result_button.addEventListener(\"click\", ()=>{\n            this.generateQuantityPanel(\"result\", trpanel);\n        });\n        tlpanel.appendChild(result_button);\n        // Requires (add/remove resources)\n        const requires_button = document.createElement(\"button\");\n        requires_button.innerHTML = \"requires\";\n        requires_button.addEventListener(\"click\", ()=>{\n            this.generateQuantityPanel(\"requires\", trpanel);\n        });\n        tlpanel.appendChild(requires_button);\n        // Consumes (add/remove resources)\n        const consumes_button = document.createElement(\"button\");\n        consumes_button.innerHTML = \"consumes\";\n        consumes_button.addEventListener(\"click\", ()=>{\n            this.generateQuantityPanel(\"consumes\", trpanel);\n        });\n        tlpanel.appendChild(consumes_button);\n        // Delete button\n        bpanel.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`));\n        $311ddb60260d5d1c$var$RESOURCE_INFORMATION.appendChild(tlpanel);\n        $311ddb60260d5d1c$var$RESOURCE_INFORMATION.appendChild(trpanel);\n        $311ddb60260d5d1c$var$RESOURCE_INFORMATION.appendChild(bpanel);\n    }\n    constructor(...args){\n        super(...args);\n        this.editorType = \"interaction\";\n        this.editorVersion = 1;\n    }\n}\n// == Initialize editor ==\n// Initialize editor, begin loading process and attach editor to window\nconst $311ddb60260d5d1c$var$editor = new $311ddb60260d5d1c$var$InteractionEditorClass();\n$311ddb60260d5d1c$var$editor.init();\nwindow.editor = $311ddb60260d5d1c$var$editor;\n$311ddb60260d5d1c$var$ADD_BUTTON.addEventListener(\"click\", ()=>{\n    $311ddb60260d5d1c$var$editor.create();\n});\n$311ddb60260d5d1c$var$SAVED_INDICATOR.addEventListener(\"click\", ()=>{\n    $311ddb60260d5d1c$var$editor.save();\n});\n// Exports\nconst $311ddb60260d5d1c$var$EXPORT_BUTTON = document.getElementById(\"export_current\");\n$311ddb60260d5d1c$var$EXPORT_BUTTON.addEventListener(\"click\", ()=>{\n    $311ddb60260d5d1c$var$editor.saveExportData(\"current\");\n});\nconst $311ddb60260d5d1c$var$EXPORT_ALL_BUTTON = document.getElementById(\"export_all\");\n$311ddb60260d5d1c$var$EXPORT_ALL_BUTTON.addEventListener(\"click\", ()=>{\n    $311ddb60260d5d1c$var$editor.saveExportData(\"editor\");\n});\n\n\n//# sourceMappingURL=interaction.2ea1e691.js.map\n","import { BaseEditorClass } from \"./editor_base\";\nimport { interaction_interface } from \"./parcel_interfaces\";\nimport { regex_hash_number } from \"./regexes\";\n\n// Empty add id manager\nconst ADD_BUTTON = document.getElementById(\"add_event\") as HTMLButtonElement;\n\nconst RESOURCE_PANEL = document.getElementById(\"show_panel\") as HTMLDivElement;\nconst RESOURCE_INFORMATION = document.getElementById(\"resource_information\") as HTMLDivElement;\nconst SAVED_INDICATOR = document.getElementById(\"saved_indicator\") as HTMLDivElement;\n\n// == Register editor ==\nclass InteractionEditorClass extends BaseEditorClass {\n\tpublic editorType = \"interaction\" as const;\n\tpublic editorVersion: number = 1;\n\n\tpublic current: interaction_interface;\n\n\tinit() {\n\t\tsuper.init();\n\t\tthis.renderResourcePanel();\n\t\tthis.updateSaveStatus();\n\t}\n\n\tupdate() {\n\t\tsuper.update();\n\t\tthis.renderResourcePanel();\n\t\tthis.updateSaveStatus();\n\t}\n\n\tgenerateEmptyParcel(id: number): interaction_interface {\n\t\treturn {\n\t\t\tid: `#${id}`,\n\t\t\ttype: \"interaction\",\n\t\t\tcomment: \"\",\n\t\t\tresult: [],\n\t\t\trequires: [],\n\t\t\tconsumes: [],\n\t\t};\n\t}\n\n\tcreate(): boolean {\n\t\tif (!this.confirmChangestateSave()) {\n\t\t\tconsole.log(\"Cannot create parcel, was unable to save currently loaded parcel\");\n\t\t\treturn false;\n\t\t}\n\n\t\t// Get a list of ids from this.interactions\n\t\tconst existingIds = this.interactions.map((elem) => Number(elem.split(\"#\")[1]));\n\t\t// New id is an ID that is not currently in use\n\t\tlet newID = 1;\n\t\tlet isNewID = false;\n\n\t\twhile (!isNewID) {\n\t\t\tif (existingIds.includes(newID)) {\n\t\t\t\tnewID++;\n\t\t\t} else {\n\t\t\t\tisNewID = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.current = this.generateEmptyParcel(newID);\n\n\t\tthis.save();\n\t\tconsole.log(`Created ${this.current.id}`);\n\n\t\tthis.update();\n\n\t\treturn true;\n\t}\n\n\tupdateSaveStatus(): void {\n\t\tif (this.current === undefined) {\n\t\t\tSAVED_INDICATOR.className = \"undefined\";\n\t\t\treturn;\n\t\t} else if (this.isSaved) {\n\t\t\tSAVED_INDICATOR.className = \"saved\";\n\t\t\treturn;\n\t\t} else if (!this.isError && this.checkValidToSave()) {\n\t\t\tSAVED_INDICATOR.className = \"unsaved\";\n\t\t\treturn;\n\t\t} else {\n\t\t\tSAVED_INDICATOR.className = \"error\";\n\t\t\treturn;\n\t\t}\n\t}\n\n\tcheckAllInputValidity(): boolean {\n\t\tconst inputs = RESOURCE_INFORMATION.getElementsByTagName(\"input\");\n\t\tfor (const i in inputs) {\n\t\t\tif (inputs[i].reportValidity && !inputs[i].reportValidity()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tcheckValidToSave(): boolean {\n\t\tif (!super.checkValidToSave()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!regex_hash_number.test(this.current.id)) {\n\t\t\tconsole.warn(`Given invalid ID: ${this.current.id} to save`);\n\t\t\tthis.isError = true;\n\t\t\tthis.updateSaveStatus();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tclearRender() {\n\t\tRESOURCE_PANEL.innerHTML = \"\";\n\t\tRESOURCE_INFORMATION.innerHTML = \"\";\n\t\tthis.renderResourcePanel();\n\t}\n\n\trenderResourcePanel() {\n\t\tRESOURCE_PANEL.innerHTML = \"\";\n\t\tfor (let i = 0; i < this.interactions.length; i++) {\n\t\t\tconst button = document.createElement(\"button\");\n\t\t\tbutton.innerHTML = this.interactions[i];\n\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\tconsole.log(`Loaded : ${this.interactions[i]}`);\n\t\t\t\tthis.load(this.interactions[i]);\n\t\t\t\tthis.renderResouceInformation();\n\t\t\t\tthis.updateSaveStatus();\n\t\t\t});\n\t\t\tRESOURCE_PANEL.appendChild(button);\n\t\t}\n\t}\n\n\trenderResouceInformation() {\n\t\t// If this.current is undefined, return\n\t\tif (this.current === undefined) {\n\t\t\tconsole.warn(\"No resource loaded\");\n\t\t\treturn;\n\t\t}\n\t\t// Generate a set of inputs for the resource\n\t\tRESOURCE_INFORMATION.innerHTML = \"\";\n\n\t\tconst tlpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\ttlpanel.id = \"tlpanel\";\n\t\tconst trpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\ttrpanel.id = \"trpanel\";\n\t\tconst bpanel = document.createElement(\"div\") as HTMLDivElement;\n\t\tbpanel.id = \"bpanel\";\n\n\t\t// ID\n\t\ttlpanel.appendChild(this.generateTextInput(\"id\", \"ID\", [\"notEmpty\", \"readonly\"]));\n\t\t// Comment\n\t\ttlpanel.appendChild(this.generateTextArea(\"comment\", \"Comment\", [\"spellcheck\"]));\n\n\t\t// Result (add/remove resources)\n\t\tconst result_button = document.createElement(\"button\");\n\t\tresult_button.innerHTML = \"result\";\n\t\tresult_button.addEventListener(\"click\", () => {\n\t\t\tthis.generateQuantityPanel(\"result\", trpanel);\n\t\t});\n\t\ttlpanel.appendChild(result_button);\n\t\t// Requires (add/remove resources)\n\t\tconst requires_button = document.createElement(\"button\");\n\t\trequires_button.innerHTML = \"requires\";\n\t\trequires_button.addEventListener(\"click\", () => {\n\t\t\tthis.generateQuantityPanel(\"requires\", trpanel);\n\t\t});\n\t\ttlpanel.appendChild(requires_button);\n\t\t// Consumes (add/remove resources)\n\t\tconst consumes_button = document.createElement(\"button\");\n\t\tconsumes_button.innerHTML = \"consumes\";\n\t\tconsumes_button.addEventListener(\"click\", () => {\n\t\t\tthis.generateQuantityPanel(\"consumes\", trpanel);\n\t\t});\n\t\ttlpanel.appendChild(consumes_button);\n\n\t\t// Delete button\n\t\tbpanel.appendChild(this.generateDeleteButton(`${this.current.type}:${this.current.id}`));\n\n\t\tRESOURCE_INFORMATION.appendChild(tlpanel);\n\t\tRESOURCE_INFORMATION.appendChild(trpanel);\n\t\tRESOURCE_INFORMATION.appendChild(bpanel);\n\t}\n}\n// == Initialize editor ==\n// Initialize editor, begin loading process and attach editor to window\nconst editor = new InteractionEditorClass();\neditor.init();\nwindow.editor = editor;\n\nADD_BUTTON.addEventListener(\"click\", () => {\n\teditor.create();\n});\n\nSAVED_INDICATOR.addEventListener(\"click\", () => {\n\teditor.save();\n});\n\n// Exports\n\nconst EXPORT_BUTTON = document.getElementById(\"export_current\") as HTMLButtonElement;\nEXPORT_BUTTON.addEventListener(\"click\", () => {\n\teditor.saveExportData(\"current\");\n});\n\nconst EXPORT_ALL_BUTTON = document.getElementById(\"export_all\") as HTMLButtonElement;\nEXPORT_ALL_BUTTON.addEventListener(\"click\", () => {\n\teditor.saveExportData(\"editor\");\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$2h5uG","$hYoLG","$311ddb60260d5d1c$var$ADD_BUTTON","document","getElementById","$311ddb60260d5d1c$var$RESOURCE_PANEL","$311ddb60260d5d1c$var$RESOURCE_INFORMATION","$311ddb60260d5d1c$var$SAVED_INDICATOR","$311ddb60260d5d1c$var$InteractionEditorClass","BaseEditorClass","renderResourcePanel","updateSaveStatus","update","generateEmptyParcel","type","comment","result","requires","consumes","create","confirmChangestateSave","console","log","existingIds","interactions","map","elem","Number","split","newID","isNewID","includes","current","save","undefined","className","isSaved","isError","checkValidToSave","checkAllInputValidity","inputs","getElementsByTagName","i","reportValidity","regex_hash_number","test","warn","clearRender","innerHTML","length","button","createElement","addEventListener","load","renderResouceInformation","appendChild","tlpanel","trpanel","bpanel","generateTextInput","generateTextArea","result_button","generateQuantityPanel","requires_button","consumes_button","generateDeleteButton","constructor","args","editorType","editorVersion","$311ddb60260d5d1c$var$editor","window","editor","$311ddb60260d5d1c$var$EXPORT_BUTTON","saveExportData","$311ddb60260d5d1c$var$EXPORT_ALL_BUTTON"],"version":3,"file":"interaction.2ea1e691.js.map"}