@import "__reset.scss";
@import "__variables.scss";

@import "__typography.scss";
@import "__page.scss";

@import "__homepage.scss";

@mixin state-style($color: $accent, $weight: inherit) {
	background-color: $color;

	@if $color == $accent {
		color: $fixed-main;
	} @else {
		color: $base;
	}

	box-shadow: 0 0 1rem $color;
	border: $color 0.25rem solid;

	font-weight: $weight;
}

@mixin valid_check() {
	&:valid {
		@include state-style($valid);
		@include interact-style();
	}
	&:invalid {
		@include state-style($warning);
	}
	&:invalid:hover {
		@include state-style($invalid);
	}
}

@mixin interact-style() {
	&:hover {
		filter: brightness(0.8);
	}
	&:active {
		filter: brightness(0.6);
	}
}

@mixin has_default_input() {
	input,
	textarea,
	select {
		font-weight: inherit;
		padding: calc($gap / 2);
		@include valid_check();
	}
}

main#resource_editor {
	padding: $gap;

	display: grid;
	grid-template-columns: 1fr 3fr 8rem;
	gap: $gap;

	> div {
		height: calc(100vh - $gap * 2);
	}
}

#resource_selection_wrapper {
	border: $border-style;
	padding: $gap;
	gap: $gap;

	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: max-content 1fr max-content;

	input,
	button {
		padding: calc($gap / 2);
	}

	#search_panel {
		display: grid;
		input {
			border: $border-style;
			background-color: $base;
			color: $main;
			@include interact-style();
		}
	}
	#show_panel_wrapper {
		overflow-y: scroll;

		#show_panel {
			display: grid;
			grid-template-columns: 1fr;

			// height: 1fr;

			> button {
				text-align: left;
				@include interact-style();
				@include state-style($accent, 700);
				&.valid {
					@include state-style($valid);
				}
				&.invalid {
					@include state-style($invalid);
				}
				&.warning {
					@include state-style($warning);
				}
			}
		}
	}
	#add_panel {
		display: grid;
		grid-template-columns: 1fr max-content;

		> input#resource_add_id {
			grid-column: 1/3;
			grid-row: 1/2;
			@include valid_check();
			&.empty:not(:focus) {
				@include state-style($base);
				outline: $border-style;
				&::placeholder {
					color: $main;
				}
			}
			&:is(:invalid, .empty) + button {
				display: none;
			}
		}
		> button#resource_add_button {
			display: flex;
			align-items: center;
			justify-content: center;

			grid-column: 2/3;
			grid-row: 1/2;
			height: 100%;

			transition: transform 0.2s linear;
			z-index: 2;

			transform: rotate(-45deg);
			&:hover {
				transform: rotate(45deg);
			}

			background-color: transparent;
			border: none;
		}
		>button#add_event {
			@include state-style($accent);
			@include interact-style();
		}
	}
}

#resource_information_panel {
	border: $border-style;
	padding: $gap;
	input:read-only {
		@include state-style($accent, 700);
		cursor: not-allowed;
		&:focus {
			outline: none;
		}
	}
	display: grid;
}
#resource_information {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: 1fr max-content;

	gap: $gap;

	@include has_default_input();

	#tlpanel,
	#trpanel,
	#bpanel {
		display: grid;
		grid-template-columns: 1fr;
		grid-auto-rows: max-content;
		gap: calc($gap / 2);
	}

	#tlpanel {
		grid-column: 1/2;
		grid-row: 1/2;
		> div {
			display: grid;
			grid-template-columns: 1fr 1fr;
			align-items: center;
			justify-content: center;
		}
		> button {
			font-weight: inherit;
			padding: $gap;
			border: none;
			@include interact-style();
			background-color: $valid;

			&.invalid {
				background-color: $invalid;
			}

			&.warning {
				background-color: $warning;
			}
		}
	}
	#trpanel {
		select {
			width: 80%;
		}
	}
	#bpanel {
		grid-column: 1/3;
		grid-row: 2/3;
		.delete {
			display: grid;
			button {
				@include state-style($warning, 900);
				@include interact-style();
				padding: $gap;
			}
		}
	}
}

#global_indicators {
	display: grid;
	gap: $gap;

	> button {
		@include state-style($accent, 700);
		padding: calc($gap / 4);
		@include interact-style();
	}

	#saved_indicator {
		padding: $gap;

		color: $base;

		&.saved {
			@include state-style($valid);
			&::before {
				content: "Saved";
			}
		}

		&.unsaved {
			@include state-style($invalid);
			&::before {
				content: "Unsaved";
			}
			+ button,
			+ button + button {
				display: none;
			}
		}

		&.error {
			@include state-style($warning);
			&::before {
				content: "Error";
			}
			+ button,
			+ button + button {
				display: none;
			}
		}
	}
}

button {
	cursor: pointer;
}
